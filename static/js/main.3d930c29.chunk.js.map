{"version":3,"sources":["utils/history.ts","api/axiosClient.ts","api/cityApi.ts","app/hooks.ts","features/auth/authSlice.ts","features/auth/pages/LoginPage.tsx","components/Common/NotFound.tsx","components/Common/PrivateRoute.tsx","components/Common/Sidebar.tsx","components/Common/Header.tsx","features/dashboard/dashboardSlice.ts","features/dashboard/components/StatisticItem.tsx","features/dashboard/components/Widget.tsx","features/dashboard/components/StudentRankingList.tsx","features/dashboard/index.tsx","features/city/citySilce.ts","api/studentApi.ts","components/FormFields/InputField.tsx","components/FormFields/RadioGroupField.tsx","components/FormFields/SelectField.tsx","features/student/components/StudentForm.tsx","features/student/pages/AddEditPage.tsx","features/student/components/StudentTable.tsx","utils/common.ts","features/student/components/StudentFilters.tsx","features/student/studentSlice.ts","features/student/pages/ListPage.tsx","features/student/index.tsx","components/Layout/Admin.tsx","App.tsx","features/counter/counterAPI.ts","features/counter/counterSlice.ts","features/auth/authSaga.ts","features/dashboard/dashboardSaga.ts","features/student/studentSaga.ts","features/city/citySaga.ts","app/rootSaga.ts","app/store.ts","serviceWorker.ts","index.tsx"],"names":["history","createBrowserHistory","axiosClient","axios","create","baseURL","process","headers","interceptors","request","use","config","error","Promise","reject","response","data","cityApi","getAll","get","params","_page","_limit","useAppDispatch","useDispatch","useAppSelector","useSelector","initialState","isLoggedIn","logging","currentUser","undefined","authSlice","createSlice","name","reducers","login","state","action","loginSuccess","payload","loginFailed","logout","authActions","actions","authReducer","reducer","useStyles","makeStyles","theme","root","display","flexFlow","justifyContent","alignItems","minHeight","box","padding","spacing","LoginPage","classes","dispatch","className","Paper","elevation","Typography","variant","component","Box","mt","Button","fullWidth","color","onClick","username","password","NotFound","props","PrivateRoute","Boolean","localStorage","getItem","to","width","maxWidth","backgroundColor","palette","background","paper","link","textDecoration","selected","Sidebar","List","aria-label","ListItem","button","ListItemIcon","Dashboard","ListItemText","primary","PeopleAlt","flexGrow","title","Header","AppBar","position","Toolbar","dashboardSlice","loading","statistics","maleCount","femaleCount","highMarkCount","lowMarkCount","highestStudentList","lowestStudentList","rankingByCityList","fetchData","fetchDataSuccess","fetchDataError","setStatistics","setHighestStudentList","setLowestStudentList","setRankingByCityList","dashboardActions","selectDashboardLoading","dashboard","selectDashboardStatistics","selectHighestStudentList","selectLowestStudentList","selectRankingByCityList","dashboardReducer","border","divider","label","textTransform","StatisticItem","icon","value","align","Widget","children","table","StudentRankingList","studentList","TableContainer","Table","size","TableHead","TableRow","TableCell","TableBody","map","student","index","mark","id","paddingTop","top","useEffect","LinearProgress","Grid","container","item","xs","md","lg","xl","fontSize","ChatRounded","ChatBubble","LinearScale","ranking","cityName","rankingList","citySlice","list","fetchCityList","fetchCityListSuccess","fetchCityListFailed","cityActions","selectCityList","city","selectCityMap","createSelector","cityList","reduce","code","selectCityOptions","cityReducer","studentApi","getById","url","add","post","update","patch","remove","delete","InputField","control","inputProps","useController","field","onBlur","onChange","ref","fieldState","invalid","TextField","margin","inputRef","helperText","message","RadioGroupField","disabled","options","row","FormControl","FormLabel","RadioGroup","option","FormControlLabel","Radio","FormHelperText","SelectField","InputLabel","Select","labelId","MenuItem","schema","yup","shape","required","test","split","filter","x","length","age","positive","integer","min","max","typeError","gender","oneOf","StudentForm","initialValues","onSubmit","useForm","defaultValues","resolver","yupResolver","handleSubmit","isSubmitting","formState","cityOptions","useState","setError","handleFormSubmit","formValues","a","type","Alert","severity","CircularProgress","AddEditPage","studentId","useParams","isEdit","setStudent","useHistory","console","log","handleStudentFormSubmit","toast","success","push","style","ChevronLeft","edit","marginRight","StudentTable","cityMap","onEdit","onRemove","React","open","setOpen","selectedStudent","setSelectedStudent","handleClose","str","toUpperCase","slice","fontWeight","handleRemoveClick","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","StudentFilters","onSearchChange","searchNameRef","useRef","htmlFor","OutlinedInput","endAdornment","Search","labelWidth","e","newFilter","name_like","target","_sort","_order","sort","order","current","studentSlice","pagination","_totalRows","fetchStudentList","fetchStudentListSuccess","fetchStudentListFailed","setFilter","setFilterWithDebounce","studentActions","selectStudentList","selectStudentLoading","selectStudentFilter","selectStudentPagination","studentReducer","titleContainer","marginBottom","ListPage","match","useRouteMatch","handleRemoveStudent","path","mb","Pagination","count","Math","ceil","page","event","StudentFeature","routeMatch","exact","gridTemplateRows","gridTemplateColumns","gridTemplateAreas","header","gridArea","sidebar","borderRight","main","AdminLayout","App","then","fetchCount","amount","resolve","setTimeout","incrementAsync","createAsyncThunk","counterSlice","status","increment","decrement","incrementByAmount","extraReducers","builder","addCase","pending","fulfilled","handleLogin","handleLogout","watchLoginFlow","authSaga","delay","setItem","put","removeItem","take","fork","call","fetchStatistics","fetchHighestStudentList","fetchLowestStudentList","fetchRankingByCityList","fetchDashboardData","dashboardSaga","all","mark_gte","mark_lte","responseList","callList","cityId","takeLatest","studentSaga","debounce","citySaga","rootSaga","rootReducer","combineReducers","router","connectRouter","counter","counterReducer","auth","sagaMiddleware","createSagaMiddleware","store","configureStore","middleware","getDefaultMiddleware","concat","routerMiddleware","run","window","location","hostname","ReactDOM","render","StrictMode","CssBaseline","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"2NAEaA,EAAUC,c,SCCjBC,E,OAAcC,EAAMC,OAAO,CAC/BC,QAFiBC,8CAGjBC,QAAS,CACP,eAAgB,sBAKpBL,EAAYM,aAAaC,QAAQC,KAC/B,SAAUC,GAER,OAAOA,KAET,SAAUC,GAER,OAAOC,QAAQC,OAAOF,MAK1BV,EAAYM,aAAaO,SAASL,KAChC,SAAUK,GAGR,OAAOA,EAASC,QAElB,SAAUJ,GAGR,OAAOC,QAAQC,OAAOF,MAIXV,QCrBAe,EAZC,CACdC,OADc,WAGZ,OAAOhB,EAAYiB,IADP,UACgB,CAC1BC,OAAQ,CACNC,MAAO,EACPC,OAAQ,Q,oDCLHC,EAAiB,kBAAMC,eACvBC,EAAkDC,I,QCSzDC,EAA0B,CAC9BC,YAAY,EACZC,SAAS,EACTC,iBAAaC,GAGTC,EAAYC,YAAY,CAC5BC,KAAM,OACNP,eACAQ,SAAU,CACRC,MADQ,SACFC,EAAOC,GACXD,EAAMR,SAAU,GAElBU,aAJQ,SAIKF,EAAOC,GAClBD,EAAMR,SAAU,EAChBQ,EAAMT,YAAa,EACnBS,EAAMP,YAAcQ,EAAOE,SAE7BC,YATQ,SASIJ,EAAOC,GACjBD,EAAMR,SAAU,GAElBa,OAZQ,SAYDL,GACLA,EAAMR,SAAU,EAChBQ,EAAMT,YAAa,EACnBS,EAAMP,iBAAcC,MAMbY,EAAcX,EAAUY,QAQtBC,EADKb,EAAUc,Q,OC9CxBC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACTC,SAAU,aACVC,eAAgB,SAChBC,WAAY,SACZC,UAAW,SAGbC,IAAK,CACHC,QAASR,EAAMS,QAAQ,QAIZ,SAASC,IACtB,IAAMC,EAAUb,IACVc,EAAWtC,IAYjB,OACE,qBAAKuC,UAAWF,EAAQV,KAAxB,SACE,eAACa,EAAA,EAAD,CAAOC,UAAW,EAAGF,UAAWF,EAAQJ,IAAxC,UACE,cAACS,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,gCAIA,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACC,EAAA,EAAD,CAAQC,WAAS,EAACL,QAAQ,YAAYM,MAAM,UAAUC,QAlBrC,WAEvBZ,EACElB,EAAYP,MAAM,CAChBsC,SAAU,GACVC,SAAU,OAaR,+BCrCH,SAASC,EAASC,GACvB,OAAO,8C,YCFF,SAASC,EAAaD,GAM3B,OADoBE,QAAQC,aAAaC,QAAQ,iBAK1C,cAAC,IAAD,eAAWJ,IAHT,cAAC,IAAD,CAAUK,GAAG,W,kECClBnC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJiC,MAAO,OACPC,SAAU,IACVC,gBAAiBpC,EAAMqC,QAAQC,WAAWC,OAG5CC,KAAM,CACJjB,MAAO,UACPkB,eAAgB,OAChB,iBAAkB,CAChBL,gBAAiBpC,EAAMqC,QAAQhD,OAAOqD,eAKrC,SAASC,EAAQf,GACtB,IAAMjB,EAAUb,IAEhB,OACE,qBAAKe,UAAWF,EAAQV,KAAxB,SACE,eAAC2C,EAAA,EAAD,CAAM1B,UAAU,MAAM2B,aAAW,oBAAjC,UACE,cAAC,IAAD,CAASZ,GAAG,mBAAmBpB,UAAWF,EAAQ6B,KAAlD,SACE,eAACM,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAQ,mBAI1B,cAAC,IAAD,CAASlB,GAAG,kBAAkBpB,UAAWF,EAAQ6B,KAAjD,SACE,eAACM,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACC,EAAA,EAAD,UACE,cAACI,EAAA,EAAD,MAEF,cAACF,EAAA,EAAD,CAAcC,QAAQ,sB,sBCpC5BrD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJoD,SAAU,GAEZC,MAAO,CACLD,SAAU,OAIP,SAASE,EAAO3B,GACrB,IAAMjB,EAAUb,IACVc,EAAWtC,IAMjB,OACE,qBAAKuC,UAAWF,EAAQV,KAAxB,SACE,cAACuD,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAAC1C,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,UAAWF,EAAQ2C,MAA5C,gCAGA,cAACjC,EAAA,EAAD,CAAQE,MAAM,UAAUC,QAXN,WACxBZ,EAASlB,EAAYD,WAUf,2BCVV,IAaMkE,EAAiB3E,YAAY,CACjCC,KAAM,YACNP,aAfmC,CACnCkF,SAAS,EACTC,WAAY,CACVC,UAAW,EACXC,YAAa,EACbC,cAAe,EACfC,aAAc,GAEhBC,mBAAoB,GACpBC,kBAAmB,GACnBC,kBAAmB,IAMnBlF,SAAU,CACRmF,UADQ,SACEjF,GACRA,EAAMwE,SAAU,GAElBU,iBAJQ,SAISlF,GACfA,EAAMwE,SAAU,GAElBW,eAPQ,SAOOnF,GACbA,EAAMwE,SAAU,GAElBY,cAVQ,SAUMpF,EAAOC,GACnBD,EAAMyE,WAAaxE,EAAOE,SAE5BkF,sBAbQ,SAacrF,EAAOC,GAC3BD,EAAM8E,mBAAqB7E,EAAOE,SAEpCmF,qBAhBQ,SAgBatF,EAAOC,GAC1BD,EAAM+E,kBAAoB9E,EAAOE,SAEnCoF,qBAnBQ,SAmBavF,EAAOC,GAC1BD,EAAMgF,kBAAoB/E,EAAOE,YAM1BqF,EAAmBjB,EAAehE,QAGlCkF,EAAyB,SAACzF,GAAD,OAAsBA,EAAM0F,UAAUlB,SAC/DmB,EAA4B,SAAC3F,GAAD,OAAsBA,EAAM0F,UAAUjB,YAClEmB,EAA2B,SAAC5F,GAAD,OAAsBA,EAAM0F,UAAUZ,oBACjEe,EAA0B,SAAC7F,GAAD,OAAsBA,EAAM0F,UAAUX,mBAChEe,GAA0B,SAAC9F,GAAD,OAAsBA,EAAM0F,UAAUV,mBAI9De,GADUxB,EAAe9D,Q,oBCpElCC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACTC,SAAU,aACVC,eAAgB,gBAChBC,WAAY,SACZG,QAASR,EAAMS,QAAQ,EAAG,GAC1B2E,OAAO,aAAD,OAAepF,EAAMqC,QAAQgD,UAErCC,MAAO,CACLC,cAAe,iBAIZ,SAASC,GAAc5D,GAA4B,IAChD6D,EAAuB7D,EAAvB6D,KAAMH,EAAiB1D,EAAjB0D,MAAOI,EAAU9D,EAAV8D,MACf/E,EAAUb,KAChB,OACE,eAACgB,EAAA,EAAD,CAAOD,UAAWF,EAAQV,KAA1B,UACE,cAACkB,EAAA,EAAD,UAAMsE,IACN,eAACtE,EAAA,EAAD,WACE,cAACH,EAAA,EAAD,CAAYC,QAAQ,KAAK0E,MAAM,QAA/B,SACGD,IAEH,cAAC1E,EAAA,EAAD,CAAYC,QAAQ,UAAUJ,UAAWF,EAAQ2E,MAAjD,SACGA,U,kCC1BLxF,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJO,QAASR,EAAMS,QAAQ,GACvB2E,OAAO,aAAD,OAAepF,EAAMqC,QAAQgD,cAIhC,SAASO,GAAT,GAAmD,IAAjCtC,EAAgC,EAAhCA,MAAOuC,EAAyB,EAAzBA,SACxBlF,EAAUb,KAChB,OACE,eAACgB,EAAA,EAAD,CAAOD,UAAWF,EAAQV,KAA1B,UACE,cAACe,EAAA,EAAD,CAAYC,QAAQ,SAApB,SAA8BqC,IAE9B,cAACnC,EAAA,EAAD,CAAKC,GAAI,EAAT,SAAayE,O,gECXb/F,GAAYC,YAAW,CAC3B+F,MAAO,KAMF,SAASC,GAAT,GAAuE,IAAzCC,EAAwC,EAAxCA,YAC7BrF,EAAUb,KAEhB,OACE,cAACmG,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAOrF,UAAWF,EAAQmF,MAAOK,KAAK,QAAQtD,aAAW,eAAzD,UACE,cAACuD,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWX,MAAM,SAAjB,eACA,cAACW,GAAA,EAAD,CAAWX,MAAM,OAAjB,kBACA,cAACW,GAAA,EAAD,CAAWX,MAAM,QAAjB,wBAGJ,cAACY,GAAA,EAAD,UACGP,EAAYQ,KAAI,SAACC,EAASC,GAAV,OACf,eAACL,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UAAYI,EAAQ,IACpB,cAACJ,GAAA,EAAD,CAAWX,MAAM,OAAjB,SAAyBc,EAAQxH,OACjC,cAACqH,GAAA,EAAD,CAAWX,MAAM,QAAjB,SAA0Bc,EAAQE,SAHrBF,EAAQG,cCfnC,IAAM9G,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJwD,SAAU,WACVoD,WAAY7G,EAAMS,QAAQ,IAE5BmD,QAAS,CACPH,SAAU,WACVqD,IAAK9G,EAAMS,SAAS,GACpByB,MAAO,YAII,SAASe,KACtB,IAAMrC,EAAWtC,IACXsF,EAAUpF,EAAeqG,GACzBhB,EAAarF,EAAeuG,GAC5Bb,EAAqB1F,EAAewG,GACpCb,EAAoB3F,EAAeyG,GACnCb,EAAoB5F,EAAe0G,IACnCvE,EAAUb,KAMhB,OAJAiH,qBAAU,WACRnG,EAASgE,EAAiBP,eACzB,CAACzD,IAGF,eAACO,EAAA,EAAD,CAAKN,UAAWF,EAAQV,KAAxB,UAEG2D,GAAW,cAACoD,GAAA,EAAD,CAAgBnG,UAAWF,EAAQiD,UAG/C,eAACqD,GAAA,EAAD,CAAMC,WAAS,EAACzG,QAAS,EAAzB,UACE,cAACwG,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArC,SACE,cAAC/B,GAAD,CACEC,KAAM,cAACrC,EAAA,EAAD,CAAWoE,SAAS,QAAQjG,MAAM,YACxC+D,MAAM,OACNI,MAAO7B,EAAWC,cAItB,cAACmD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArC,SACE,cAAC/B,GAAD,CACEC,KAAM,cAACgC,GAAA,EAAD,CAAaD,SAAS,QAAQjG,MAAM,YAC1C+D,MAAM,SACNI,MAAO7B,EAAWE,gBAItB,cAACkD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArC,SACE,cAAC/B,GAAD,CACEC,KAAM,cAACiC,GAAA,EAAD,CAAYF,SAAS,QAAQjG,MAAM,YACzC+D,MAAM,YACNI,MAAO7B,EAAWG,kBAItB,cAACiD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArC,SACE,cAAC/B,GAAD,CACEC,KAAM,cAACkC,GAAA,EAAD,CAAaH,SAAS,QAAQjG,MAAM,YAC1C+D,MAAM,YACNI,MAAO7B,EAAWI,oBAMxB,eAAC9C,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,cAACJ,EAAA,EAAD,CAAYC,QAAQ,KAApB,0BAEA,cAACE,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,eAAC6F,GAAA,EAAD,CAAMC,WAAS,EAACzG,QAAS,EAAzB,UACE,cAACwG,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACE,cAAC1B,GAAD,CAAQtC,MAAM,4BAAd,SACE,cAACyC,GAAD,CAAoBC,YAAa9B,QAIrC,cAAC+C,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACE,cAAC1B,GAAD,CAAQtC,MAAM,2BAAd,SACE,cAACyC,GAAD,CAAoBC,YAAa7B,gBAQ3C,eAAChD,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,cAACJ,EAAA,EAAD,CAAYC,QAAQ,KAApB,6BAEA,cAACE,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC6F,GAAA,EAAD,CAAMC,WAAS,EAACzG,QAAS,EAAzB,SACG2D,EAAkBoC,KAAI,SAACoB,GAAD,OACrB,cAACX,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACE,cAAC1B,GAAD,CAAQtC,MAAOsE,EAAQC,SAAvB,SACE,cAAC9B,GAAD,CAAoBC,YAAa4B,EAAQE,+B,sBClGrDC,GAAY/I,YAAY,CAC5BC,KAAM,OACNP,aAP8B,CAC9BsJ,KAAM,GACNpE,SAAS,GAMT1E,SAAU,CACR+I,cADQ,SACM7I,GACZA,EAAMwE,SAAU,GAElBsE,qBAJQ,SAIa9I,EAAOC,GAC1BD,EAAMwE,SAAU,EAChBxE,EAAM4I,KAAO3I,EAAOE,QAAQxB,MAE9BoK,oBARQ,SAQY/I,GAClBA,EAAMwE,SAAU,MAMTwE,GAAcL,GAAUpI,QAGxB0I,GAAiB,SAACjJ,GAAD,OAAsBA,EAAMkJ,KAAKN,MAClDO,GAAgBC,aAAeH,IAAgB,SAACI,GAC3D,OAAOA,EAASC,QAAO,SAAClC,EAA8B8B,GAEpD,OADA9B,EAAI8B,EAAKK,MAAQL,EACV9B,IACN,OAGQoC,GAAoBJ,aAAeH,IAAgB,SAACI,GAAD,MAC9D,CACE,CACExJ,KAAM,YACN0J,KAAM,KAHV,oBAKKF,IACHjC,KAAI,SAAC8B,GAAD,MAAW,CACfhD,MAAOgD,EAAKrJ,KACZyG,MAAO4C,EAAKK,YAKDE,GADKd,GAAUlI,Q,+CCxBfiJ,GA7BI,CACjB7K,OADiB,SACVE,GAEL,OAAOlB,EAAYiB,IADP,YACgB,CAC1BC,YAIJ4K,QARiB,SAQTnC,GACN,IAAMoC,EAAG,oBAAgBpC,GACzB,OAAO3J,EAAYiB,IAAI8K,IAGzBC,IAbiB,SAablL,GAEF,OAAOd,EAAYiM,KADP,YACiBnL,IAG/BoL,OAlBiB,SAkBVpL,GACL,IAAMiL,EAAG,2BAAgBjL,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAM6I,IAC/B,OAAO3J,EAAYmM,MAAMJ,EAAKjL,IAGhCsL,OAvBiB,SAuBVzC,GACL,IAAMoC,EAAG,oBAAgBpC,GACzB,OAAO3J,EAAYqM,OAAON,K,iDClBvB,SAASO,GAAT,GAA+E,IAAzDtK,EAAwD,EAAxDA,KAAMuK,EAAkD,EAAlDA,QAASlE,EAAyC,EAAzCA,MAAUmE,EAA+B,6CAI/EC,aAAc,CAChBzK,OACAuK,YANiF,IAEjFG,MAASjE,EAFwE,EAExEA,MAAOkE,EAFiE,EAEjEA,OAAQC,EAFyD,EAEzDA,SAAUC,EAF+C,EAE/CA,IAF+C,IAGjFC,WAAcC,EAHmE,EAGnEA,QAASrM,EAH0D,EAG1DA,MAKzB,OACE,cAACsM,GAAA,EAAD,CACE3E,MAAOA,EACPhE,WAAS,EACT4I,OAAO,SACPjJ,QAAQ,WACRyE,MAAOA,EACPyE,SAAUL,EACVnM,MAAOqM,EACPI,WAAU,OAAEzM,QAAF,IAAEA,OAAF,EAAEA,EAAO0M,QACnBZ,WAAYA,EACZtD,KAAK,QACLyD,OAAQA,EACRC,SAAUA,I,gECPT,SAASS,GAAT,GAOmB,IANxBrL,EAMuB,EANvBA,KACAuK,EAKuB,EALvBA,QACAlE,EAIuB,EAJvBA,MACAiF,EAGuB,EAHvBA,SACAC,EAEuB,EAFvBA,QACAC,EACuB,EADvBA,IACuB,EAInBf,aAAc,CAChBzK,OACAuK,YANqB,IAErBG,MAASjE,EAFY,EAEZA,MAAOkE,EAFK,EAELA,OAAQC,EAFH,EAEGA,SAFH,IAGrBE,WAAcC,EAHO,EAGPA,QAASrM,EAHF,EAGEA,MAKzB,OACE,eAAC+M,GAAA,EAAD,CAAaxJ,UAAU,WAAWqJ,SAAUA,EAAU5M,MAAOqM,EAAS1I,WAAS,EAAC4I,OAAO,SAAvF,UACE,cAACS,GAAA,EAAD,CAAWzJ,UAAU,SAArB,SAA+BoE,IAC/B,cAACsF,GAAA,EAAD,CAAYH,IAAKA,EAAKxL,KAAMA,EAAM4K,SAAUA,EAAUD,OAAQA,EAAQlE,MAAOA,EAA7E,SACG8E,EAAQhE,KAAI,SAACqE,GAAD,OACX,cAACC,GAAA,EAAD,CAEEP,SAAUM,EAAON,SACjB7E,MAAOmF,EAAOnF,MACd8D,QAAS,cAACuB,GAAA,EAAD,IACTzF,MAAOuF,EAAOvF,OAJTuF,EAAOnF,YAQlB,cAACsF,GAAA,EAAD,iBAAiBrN,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAO0M,a,kCCjCvB,SAASY,GAAT,GAAqF,IAA9DhM,EAA6D,EAA7DA,KAAMuK,EAAuD,EAAvDA,QAASlE,EAA8C,EAA9CA,MAAOiF,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,QAA6B,EAIrFd,aAAc,CAChBzK,OACAuK,YANuF,IAEvFG,MAASjE,EAF8E,EAE9EA,MAAOkE,EAFuE,EAEvEA,OAAQC,EAF+D,EAE/DA,SAF+D,IAGvFE,WAAcC,EAHyE,EAGzEA,QAASrM,EAHgE,EAGhEA,MAKzB,OACE,eAAC+M,GAAA,EAAD,CACEzJ,QAAQ,WACRkF,KAAK,QACL7E,WAAS,EACT3D,MAAOqM,EACPO,SAAUA,EACVL,OAAO,SANT,UAQE,cAACgB,GAAA,EAAD,CAAYtE,GAAE,UAAK3H,EAAL,UAAd,SAAkCqG,IAClC,cAAC6F,GAAA,EAAD,CACEC,QAAO,UAAKnM,EAAL,UACPyG,MAAOA,EACPmE,SAAUA,EACVD,OAAQA,EACRtE,MAAOA,EALT,SAOGkF,EAAQhE,KAAI,SAACqE,GAAD,OACX,cAACQ,GAAA,EAAD,CAA6B3F,MAAOmF,EAAOnF,MAA3C,SACGmF,EAAOvF,OADKuF,EAAOnF,YAK1B,cAACsF,GAAA,EAAD,iBAAiBrN,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAO0M,a,uBCxCxBiB,GAASC,OAAaC,MAAM,CAChCvM,KAAMsM,OAEHE,SAAS,qBACTC,KAAK,YAAa,oCAAoC,SAAChG,GACtD,OAAKA,GACSA,EAAMiG,MAAM,KACbC,QAAO,SAACC,GAAD,OAAO/J,QAAQ+J,MAAIC,QAAU,KAErDC,IAAKR,OAEFS,SAAS,mCACTC,QAAQ,4BACRC,IAAI,GAAI,cACRC,IAAI,GAAI,cACRV,SAAS,qBACTW,UAAU,gCACbzF,KAAM4E,OAEHW,IAAI,EAAG,aACPC,IAAI,GAAI,cACRV,SAAS,sBACTW,UAAU,gCACbC,OAAQd,OAELe,MAAM,CAAC,OAAQ,UAAW,wCAC1Bb,SAAS,yBACZnD,KAAMiD,OAAaE,SAAS,2BAQf,SAASc,GAAT,GAAqE,IAA9CC,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,SAA8B,EAK7EC,aAAiB,CACnBC,cAAeH,EACfI,SAAUC,aAAYvB,MALtB9B,EAF+E,EAE/EA,QACAsD,EAH+E,EAG/EA,aACaC,EAJkE,EAI/EC,UAAaD,aAMTE,EAAczO,EAAeoK,IAV8C,EAWvDsE,mBAAS,IAX8C,oBAW1EvP,EAX0E,KAWnEwP,EAXmE,KAa3EC,EAAgB,yCAAG,WAAOC,GAAP,UAAAC,EAAA,sEAGrBH,EAAS,IAHY,gBAIfV,QAJe,IAIfA,OAJe,EAIfA,EAAWY,GAJI,sDAMrBF,EAAS,KAAI9C,SANQ,wDAAH,sDAStB,OACE,cAAClJ,EAAA,EAAD,CAAKgB,SAAU,IAAf,SACE,uBAAMsK,SAAUK,EAAaM,GAA7B,UAEE,cAAC7D,GAAD,CAAYtK,KAAK,OAAOuK,QAASA,EAASlE,MAAM,cAEhD,cAACgF,GAAD,CACErL,KAAK,SACLuK,QAASA,EACTlE,MAAM,SACNmF,KAAK,EACLD,QAAS,CACP,CACElF,MAAO,OACPI,MAAO,QAET,CACEJ,MAAO,SACPI,MAAO,aAIb,cAAC6D,GAAD,CAAYtK,KAAK,MAAMuK,QAASA,EAASlE,MAAM,MAAMiI,KAAK,WAC1D,cAAChE,GAAD,CAAYtK,KAAK,OAAOuK,QAASA,EAASlE,MAAM,OAAOiI,KAAK,WAE5D,cAACtC,GAAD,CAAahM,KAAK,OAAOuK,QAASA,EAASlE,MAAM,OAAOkF,QAASyC,IAEhEtP,GAAS,cAAC6P,GAAA,EAAD,CAAOC,SAAS,QAAhB,SAAyB9P,IAEnC,cAACwD,EAAA,EAAD,UACE,eAACE,EAAA,EAAD,CAAQkM,KAAK,SAAStM,QAAQ,YAAYM,MAAM,UAAUgJ,SAAUwC,EAApE,UACGA,GAAgB,cAACW,GAAA,EAAD,CAAkBnM,MAAM,UAAU4E,KAAM,KAD3D,sB,aCzFK,SAASwH,KAAe,IAC7BC,EAAcC,cAAdD,UACFE,EAAShM,QAAQ8L,GAFa,EAGNV,qBAHM,oBAG7BzG,EAH6B,KAGpBsH,EAHoB,KAI9BhR,EAAUiR,cAEhBjH,qBAAU,WACH6G,GAGL,wBAAC,6BAAAN,EAAA,+EAE+BxE,GAAWC,QAAQ6E,GAFlD,OAES7P,EAFT,OAGGgQ,EAAWhQ,GAHd,gDAKGkQ,QAAQC,IAAI,kCAAZ,MALH,wDAAD,KAQC,CAACN,IAEJ,IAAMO,EAAuB,yCAAG,WAAOd,GAAP,UAAAC,EAAA,0DAE1BQ,EAF0B,gCAGtBhF,GAAWK,OAAOkE,GAHI,6CAKtBvE,GAAWG,IAAIoE,GALO,OAQ9Be,KAAMC,QAAQ,8BACdtR,EAAQuR,KAAK,mBATiB,2CAAH,sDAYvB9B,EAAsB,aAC1BvN,KAAM,GACN8M,IAAK,EACLpF,KAAM,EACN2B,KAAM,GACN+D,OAAQ,QACL5F,GAGL,OACE,eAACtF,EAAA,EAAD,WACE,cAAC,IAAD,CAAMc,GAAI,kBAAV,SACE,eAACjB,EAAA,EAAD,CAAYC,QAAQ,UAAUsN,MAAO,CAAErO,QAAS,OAAQG,WAAY,UAApE,UACE,cAACmO,GAAA,EAAD,IADF,iCAKF,cAACxN,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0B6M,EAAS,sBAAwB,sBAGxDA,GAAUhM,QAAQ2E,KACnB,cAACtF,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACmL,GAAD,CAAaC,cAAeA,EAAeC,SAAU0B,S,gEC1CzDrO,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC8F,MAAO,GACP2I,KAAM,CACJC,YAAa1O,EAAMS,QAAQ,QAUhB,SAASkO,GAAT,GAKQ,IAJrB3I,EAIoB,EAJpBA,YACA4I,EAGoB,EAHpBA,QACAC,EAEoB,EAFpBA,OACAC,EACoB,EADpBA,SAEMnO,EAAUb,KADI,EAGIiP,IAAM7B,UAAkB,GAH5B,oBAGb8B,EAHa,KAGPC,EAHO,OAI0BF,IAAM7B,WAJhC,oBAIbgC,EAJa,KAIIC,EAJJ,KAMdC,EAAc,WAClBH,GAAQ,IAeV,OACE,qCAEE,cAAChJ,GAAA,EAAD,CAAgB/E,UAAWJ,IAA3B,SACE,eAACoF,GAAA,EAAD,CAAOrF,UAAWF,EAAQmF,MAAOK,KAAK,QAAQtD,aAAW,eAAzD,UACE,cAACuD,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,iBACA,cAACA,GAAA,EAAD,mBACA,cAACA,GAAA,EAAD,qBACA,cAACA,GAAA,EAAD,mBACA,cAACA,GAAA,EAAD,mBACA,cAACA,GAAA,EAAD,CAAWX,MAAM,SAAjB,yBAGJ,cAACY,GAAA,EAAD,UACGP,EAAYQ,KAAI,SAACC,GAAD,MCvEAE,EANI0I,ED6EJ,OACf,eAAChJ,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UAAYG,EAAQG,KACpB,cAACN,GAAA,EAAD,UAAYG,EAAQxH,OACpB,cAACqH,GAAA,EAAD,WCjFiB+I,EDiFY5I,EAAQ4F,OChF9CgD,EAEC,GAAN,OAAUA,EAAI,GAAGC,eAAjB,OAAiCD,EAAIE,MAAM,IAF1B,MDiFH,cAACjJ,GAAA,EAAD,UACE,cAACnF,EAAA,EAAD,CAAKI,OC7EMoF,ED6EcF,EAAQE,KC5E7CA,GAAQ,EAAU,QAClBA,GAAQ,EAAU,YACf,OD0EiD6I,WAAW,OAAnD,SACG/I,EAAQE,SAGb,cAACL,GAAA,EAAD,oBAAYsI,EAAQnI,EAAQ6B,aAA5B,aAAY,EAAuBrJ,OACnC,eAACqH,GAAA,EAAD,CAAWX,MAAM,QAAjB,UACE,cAACtE,EAAA,EAAD,CACE8E,KAAK,QACL5E,MAAM,UACNC,QAAS,yBAAMqN,QAAN,IAAMA,OAAN,EAAMA,EAASpI,IACxB5F,UAAWF,EAAQ8N,KAJrB,kBAQA,cAACpN,EAAA,EAAD,CAAQ8E,KAAK,QAAQ5E,MAAM,YAAYC,QAAS,kBAhDtC,SAACiF,GACzBwI,GAAQ,GACRE,EAAmB1I,GA8CiDgJ,CAAkBhJ,IAAxE,yBAnBWA,EAAQG,cA8B/B,eAAC8I,GAAA,EAAD,CACEV,KAAMA,EACNW,QAASP,EACTQ,kBAAgB,qBAChBC,mBAAiB,2BAJnB,UAME,cAACC,GAAA,EAAD,CAAalJ,GAAG,qBAAhB,SAAsC,oBACtC,cAACmJ,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAmBpJ,GAAG,2BAAtB,kEACsDsI,QADtD,IACsDA,OADtD,EACsDA,EAAiBjQ,KADvE,MACoF,uBADpF,+BAKF,eAACgR,GAAA,EAAD,WACE,cAAC5O,EAAA,EAAD,CAAQG,QAAS4N,EAAjB,oBACA,cAAC/N,EAAA,EAAD,CAAQG,QArEmB,WACjCyN,GAAQ,GACJH,GACFA,EAASI,IAkEwCgB,WAAS,EAAtD,yB,wBEtGK,SAASC,GAAT,GAKU,IAJvBvE,EAIsB,EAJtBA,OACAnD,EAGsB,EAHtBA,SACAoB,EAEsB,EAFtBA,SACAuG,EACsB,EADtBA,eAEMC,EAAgBC,mBAgDtB,OACE,cAACnP,EAAA,EAAD,UACE,eAAC8F,GAAA,EAAD,CAAMC,WAAS,EAACzG,QAAS,EAAzB,UACE,cAACwG,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,eAACqD,GAAA,EAAD,CAAapJ,WAAS,EAACL,QAAQ,WAAWkF,KAAK,QAA/C,UACE,cAAC+E,GAAA,EAAD,CAAYqF,QAAQ,eAApB,4BACA,cAACC,GAAA,EAAD,CACE5J,GAAG,eACHtB,MAAM,iBACNmL,aAAc,cAACC,GAAA,EAAD,IACdC,WAAY,GACZ9G,SA1De,SAAC+G,GAC1B,GAAKR,EAAL,CACA,IAAMS,EAAqB,2BACtBjF,GADsB,IAEzBkF,UAAWF,EAAEG,OAAOrL,MACpBtH,MAAO,IAETgS,EAAeS,KAoDL1G,SAAUkG,SAKhB,cAACpJ,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACE,eAACoD,GAAA,EAAD,CAAazJ,QAAQ,WAAWkF,KAAK,QAAQ7E,WAAS,EAAtD,UACE,cAAC4J,GAAA,EAAD,CAAYtE,GAAG,eAAf,4BACA,eAACuE,GAAA,EAAD,CACEC,QAAQ,eACR1F,MAAOkG,EAAOtD,MAAQ,GACtBuB,SA5Da,SAAC+G,GACxB,GAAK/G,EAAL,CACA,IAAMgH,EAAqB,2BACtBjF,GADsB,IAEzBtD,KAAMsI,EAAEG,OAAOrL,YAAS5G,EACxBV,MAAO,IAETyL,EAASgH,KAsDCvL,MAAM,iBAJR,UAME,cAAC+F,GAAA,EAAD,CAAU3F,MAAM,GAAhB,SACE,uCAED+C,EAASjC,KAAI,SAAC8B,GAAD,OACZ,cAAC+C,GAAA,EAAD,CAA0B3F,MAAO4C,EAAKK,KAAtC,SACGL,EAAKrJ,MADOqJ,EAAKK,iBAQ5B,cAAC1B,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACE,eAACoD,GAAA,EAAD,CAAazJ,QAAQ,WAAWkF,KAAK,QAAQ7E,WAAS,EAAtD,UACE,cAAC4J,GAAA,EAAD,CAAYtE,GAAG,SAAf,kBACA,eAACuE,GAAA,EAAD,CACEC,QAAQ,SACR1F,MAAOkG,EAAOoF,MAAP,UAAkBpF,EAAOoF,MAAzB,YAAkCpF,EAAOqF,QAAW,GAC3DpH,SAvEa,SAAC+G,GACxB,GAAK/G,EAAL,CAD8E,MAEvD+G,EAAEG,OAAOrL,MAAiBiG,MAAM,KAFuB,oBAEvEuF,EAFuE,KAEjEC,EAFiE,KAGxEN,EAAqB,2BACtBjF,GADsB,IAEzBoF,MAAOE,QAAQpS,EACfmS,OAASE,QAA4BrS,IAEvC+K,EAASgH,KAgECvL,MAAM,OAJR,UAME,cAAC+F,GAAA,EAAD,CAAU3F,MAAM,GAAhB,SACE,2CAEF,cAAC2F,GAAA,EAAD,CAAU3F,MAAM,WAAhB,sBACA,cAAC2F,GAAA,EAAD,CAAU3F,MAAM,YAAhB,uBACA,cAAC2F,GAAA,EAAD,CAAU3F,MAAM,WAAhB,sBACA,cAAC2F,GAAA,EAAD,CAAU3F,MAAM,YAAhB,+BAKN,cAACuB,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACE,cAACjG,EAAA,EAAD,CAAQJ,QAAQ,WAAWM,MAAM,UAAUC,QA3EzB,WACxB,GAAKqI,EAAL,CACA,IAAMgH,EAAqB,2BACtBjF,GADsB,IAEzBoF,WAAOlS,EACPmS,YAAQnS,EACRV,MAAO,EACPkK,UAAMxJ,EACNgS,eAAWhS,IAEb+K,EAASgH,GACLR,EAAce,UAChBf,EAAce,QAAQ1L,MAAQ,MA+D1B,iCC3HV,IAcM2L,GAAerS,YAAY,CAC/BC,KAAM,UACNP,aAhBiC,CACjCkF,SAAS,EACToE,KAAM,GACN4D,OAAQ,CACNxN,MAAO,EACPC,OAAQ,IAEViT,WAAY,CACVjT,OAAQ,EACRD,MAAO,EACPmT,WAAY,IAOdrS,SAAU,CACRsS,iBADQ,SACSpS,EAAOC,GACtBD,EAAMwE,SAAU,GAElB6N,wBAJQ,SAIgBrS,EAAOC,GAC7BD,EAAMwE,SAAU,EAChBxE,EAAM4I,KAAO3I,EAAOE,QAAQxB,KAC5BqB,EAAMkS,WAAajS,EAAOE,QAAQ+R,YAEpCI,uBATQ,SASetS,GACrBA,EAAMwE,SAAU,GAGlB+N,UAbQ,SAaEvS,EAAOC,GACfD,EAAMwM,OAASvM,EAAOE,SAGxBqS,sBAjBQ,SAiBcxS,EAAOC,QAKpBwS,GAAiBR,GAAa1R,QAG9BmS,GAAoB,SAAC1S,GAAD,OAAsBA,EAAMqH,QAAQuB,MACxD+J,GAAuB,SAAC3S,GAAD,OAAsBA,EAAMqH,QAAQ7C,SAC3DoO,GAAsB,SAAC5S,GAAD,OAAsBA,EAAMqH,QAAQmF,QAC1DqG,GAA0B,SAAC7S,GAAD,OAAsBA,EAAMqH,QAAQ6K,YAI5DY,GADQb,GAAaxR,QCvC9BC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJwD,SAAU,WACVoD,WAAY7G,EAAMS,QAAQ,IAE5B0R,eAAgB,CACdjS,QAAS,OACTC,SAAU,aACVC,eAAgB,gBAChBC,WAAY,SACZ+R,aAAcpS,EAAMS,QAAQ,IAE9BmD,QAAS,CACPH,SAAU,WACVvB,MAAO,OACP4E,IAAK9G,EAAMS,SAAS,QAIT,SAAS4R,KACtB,IAAMzR,EAAWtC,IACXqC,EAAUb,KACVkG,EAAcxH,EAAesT,IAC7BR,EAAa9S,EAAeyT,IAC5BrG,EAASpN,EAAewT,IACxBpO,EAAUpF,EAAeuT,IACzBnD,EAAUpQ,EAAe+J,IACzBE,EAAWjK,EAAe6J,IAC1BiK,EAAQC,cACRxV,EAAUiR,cAWhBjH,qBAAU,WACRnG,EAASiR,GAAeL,iBAAiB5F,MACxC,CAAChL,EAAUgL,IAEd,IAYM4G,EAAmB,yCAAG,WAAO/L,GAAP,UAAA6G,EAAA,+EAGlBxE,GAAWO,QAAc,OAAP5C,QAAO,IAAPA,OAAA,EAAAA,EAASG,KAAM,IAHf,OAKxBwH,KAAMC,QAAQ,gCAGdzN,EAASiR,GAAeF,UAAf,eAA8B/F,KARf,gDAWxBqC,QAAQC,IAAI,uBAAZ,MAXwB,yDAAH,sDAezB,OACE,eAAC/M,EAAA,EAAD,CAAKN,UAAWF,EAAQV,KAAxB,UAEG2D,GAAW,cAACoD,GAAA,EAAD,CAAgBnG,UAAWF,EAAQiD,UAE/C,eAACzC,EAAA,EAAD,CAAKN,UAAWF,EAAQwR,eAAxB,UACE,cAACnR,EAAA,EAAD,CAAYC,QAAQ,KAApB,sBACA,cAAC,IAAD,CAAMgB,GAAE,UAAKqQ,EAAMG,KAAX,QAAuBlE,MAAO,CAAE9L,eAAgB,QAAxD,SACE,cAACpB,EAAA,EAAD,CAAQJ,QAAQ,YAAYM,MAAM,UAAlC,kCAOJ,cAACJ,EAAA,EAAD,CAAKuR,GAAI,EAAT,SACE,cAACvC,GAAD,CACEvE,OAAQA,EACRnD,SAAUA,EACV2H,eA9CmB,SAACS,GAC1BjQ,EAASiR,GAAeD,sBAAsBf,KA8CxChH,SA3CmB,SAACgH,GAC1BjQ,EAASiR,GAAeF,UAAUd,SA+ChC,cAAClC,GAAD,CACE3I,YAAaA,EACb4I,QAASA,EACTC,OA/CoB,SAACpI,GACzB1J,EAAQuR,KAAR,UAAgBgE,EAAMG,KAAtB,YAA8BhM,EAAQG,MA+ClCkI,SAAU0D,IAIZ,cAACrR,EAAA,EAAD,CAAKC,GAAI,EAAGlB,QAAQ,OAAOE,eAAe,SAA1C,SACE,cAACuS,GAAA,EAAD,CACEpR,MAAM,UACNqR,MAAOC,KAAKC,MAAe,OAAVxB,QAAU,IAAVA,OAAA,EAAAA,EAAYC,aAAZ,OAAyBD,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAYjT,SACtD0U,KAAMzB,EAAWlT,MACjByL,SA9EiB,SAACmJ,EAAYD,GACpCnS,EACEiR,GAAeF,UAAf,2BACK/F,GADL,IAEExN,MAAO2U,cChDA,SAASE,KACtB,IAAMC,EAAaX,cACb3R,EAAWtC,IAMjB,OAJAyI,qBAAU,WACRnG,EAASwH,GAAYH,mBACpB,CAACrH,IAGF,eAAC,IAAD,WACE,cAAC,IAAD,CAAO6R,KAAMS,EAAWT,KAAMU,OAAK,EAAnC,SACE,cAACd,GAAD,MAGF,cAAC,IAAD,CAAOI,KAAI,UAAKS,EAAWT,KAAhB,QAAX,SACE,cAAC9E,GAAD,MAGF,cAAC,IAAD,CAAO8E,KAAI,UAAKS,EAAWT,KAAhB,eAAX,SACE,cAAC9E,GAAD,SCnBR,IAAM7N,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACTkT,iBAAkB,WAClBC,oBAAqB,YACrBC,kBAAmB,iCACnBhT,UAAW,SAEbiT,OAAQ,CACNC,SAAU,UAEZC,QAAS,CACPD,SAAU,UACVE,YAAY,aAAD,OAAe1T,EAAMqC,QAAQgD,SACxCjD,gBAAiBpC,EAAMqC,QAAQC,WAAWC,OAE5CoR,KAAM,CACJH,SAAU,OACVpR,gBAAiBpC,EAAMqC,QAAQC,WAAWC,MAC1C/B,QAASR,EAAMS,QAAQ,EAAG,QAIvB,SAASmT,KACd,IAAMjT,EAAUb,KAEhB,OACE,eAACqB,EAAA,EAAD,CAAKN,UAAWF,EAAQV,KAAxB,UACE,cAACkB,EAAA,EAAD,CAAKN,UAAWF,EAAQ4S,OAAxB,SACE,cAAChQ,EAAD,MAEF,cAACpC,EAAA,EAAD,CAAKN,UAAWF,EAAQ8S,QAAxB,SACE,cAAC9Q,EAAD,MAEF,cAACxB,EAAA,EAAD,CAAKN,UAAWF,EAAQgT,KAAxB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOlB,KAAK,mBAAZ,SACE,cAAC,GAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,kBAAZ,SACE,cAACQ,GAAD,cCnBGY,OAtBf,WAKE,OAJA9M,qBAAU,WACR/I,EAAQC,SAAS6V,MAAK,SAAChW,GAAD,OAAcmQ,QAAQC,IAAIpQ,SAIhD,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2U,KAAK,IAAIU,OAAK,EAArB,SACE,cAACzS,EAAD,MAGF,cAACmB,EAAD,CAAc4Q,KAAK,SAAnB,SACE,cAACmB,GAAD,MAGF,cAAC,IAAD,UACE,cAACjS,EAAD,U,6BCtBD,SAASoS,KAAwB,IAAbC,EAAY,uDAAH,EAClC,OAAO,IAAIpW,SAA0B,SAACqW,GAAD,OACnCC,YAAW,kBAAMD,EAAQ,CAAElW,KAAMiW,MAAW,QCMhD,IAUaG,GAAiBC,YAC5B,qBAD4C,yCAE5C,WAAOJ,GAAP,gBAAA1G,EAAA,sEACyByG,GAAWC,GADpC,cACQlW,EADR,yBAGSA,EAASC,MAHlB,2CAF4C,uDASjCsW,GAAerV,YAAY,CACtCC,KAAM,UACNP,aArBiC,CACjCgH,MAAO,EACP4O,OAAQ,QAqBRpV,SAAU,CACRqV,UAAW,SAACnV,GAKVA,EAAMsG,OAAS,GAEjB8O,UAAW,SAACpV,GACVA,EAAMsG,OAAS,GAGjB+O,kBAAmB,SAACrV,EAAOC,GACzBD,EAAMsG,OAASrG,EAAOE,UAK1BmV,cAAe,SAACC,GACdA,EACGC,QAAQT,GAAeU,SAAS,SAACzV,GAChCA,EAAMkV,OAAS,aAEhBM,QAAQT,GAAeW,WAAW,SAAC1V,EAAOC,GACzCD,EAAMkV,OAAS,OACflV,EAAMsG,OAASrG,EAAOE,c,GAK6B8U,GAAa1U,QAmBzD0U,I,GAnBAE,U,GAAWC,U,GAAWC,kBAmBtBJ,GAAf,S,yCC5EUU,I,aAkBAC,I,aAOAC,I,aAaeC,IAtCzB,SAAUH,GAAYxV,GAAtB,kEAEI,OAFJ,kBAEU4V,aAAM,KAFhB,OAII,OADApT,aAAaqT,QAAQ,eAAgB,cAHzC,SAIUC,aACJ3V,EAAYJ,aAAa,CACvBsH,GAAI,EACJ3H,KAAM,mBAPd,OAYI,OAZJ,SAYUoW,aAAI/G,aAAK,qBAZnB,+BAcI,OAdJ,oCAcU+G,aAAI3V,EAAYF,YAAY,KAAM6K,UAd5C,uDAkBA,SAAU2K,KAAV,kEACE,OADF,SACQG,aAAM,KADd,OAIE,OAFApT,aAAauT,WAAW,gBAF1B,SAIQD,aAAI/G,aAAK,MAJjB,wCAOA,SAAU2G,KAAV,2EAEuBnT,QAAQC,aAAaC,QAAQ,iBAFpD,gBAIkD,OAJlD,SAIwDuT,aAAK7V,EAAYP,MAAMoO,MAJ/E,OAKM,OADMlO,EAJZ,gBAKYmW,aAAKT,GAAa1V,EAAOE,SALrC,OAQI,OARJ,UAQUgW,aAAK7V,EAAYD,OAAO8N,MARlC,QASI,OATJ,UASUkI,aAAKT,IATf,gEAae,SAAUE,KAAV,kEACb,OADa,SACPM,aAAKP,IADE,wC,iBCrCLS,I,aAoBAC,I,aAWAC,I,aAWAC,I,aA2BAC,I,aAgBeC,IArFzB,SAAUL,KAAV,oFACqD,OADrD,SAC2DM,aAAI,CAC3DP,aAAK3M,GAAW7K,OAAQ,CAAEG,MAAO,EAAGC,OAAQ,EAAGgO,OAAQ,SACvDoJ,aAAK3M,GAAW7K,OAAQ,CAAEG,MAAO,EAAGC,OAAQ,EAAGgO,OAAQ,WACvDoJ,aAAK3M,GAAW7K,OAAQ,CAAEG,MAAO,EAAGC,OAAQ,EAAG4X,SAAU,IACzDR,aAAK3M,GAAW7K,OAAQ,CAAEG,MAAO,EAAGC,OAAQ,EAAG6X,SAAU,MAL7D,OAUE,OATMC,EADR,OAQQtS,EAAasS,EAAa3P,KAAI,SAACqF,GAAD,OAAOA,EAAEyF,WAAWC,cAR1D,eASgE1N,EAThE,GASSC,EATT,KASoBC,EATpB,KASiCC,EATjC,KASgDC,EAThD,cAUQoR,aACJzQ,EAAiBJ,cAAc,CAC7BT,cACAC,gBACAC,eACAH,eAfN,wCAoBA,SAAU6R,KAAV,0EAC0C,OAD1C,SACgDF,aAAK3M,GAAW7K,OAAQ,CACpEG,MAAO,EACPC,OAAQ,EACR4S,OAAQ,OACRD,MAAO,SALX,OAQE,OARF,SACUjT,EADV,EACUA,KADV,SAQQsX,aAAIzQ,EAAiBH,sBAAsB1G,IARnD,wCAWA,SAAU6X,KAAV,0EAC0C,OAD1C,SACgDH,aAAK3M,GAAW7K,OAAQ,CACpEG,MAAO,EACPC,OAAQ,EACR4S,OAAQ,MACRD,MAAO,SALX,OAQE,OARF,SACUjT,EADV,EACUA,KADV,SAQQsX,aAAIzQ,EAAiBF,qBAAqB3G,IARlD,wCAWA,SAAU8X,KAAV,gFAEiD,OAFjD,SAEuDJ,aAAKzX,EAAQC,QAFpE,OAeqD,OAfrD,SAEgBwK,EAFhB,EAEU1K,KAGFqY,EAAW3N,EAASjC,KAAI,SAACqF,GAAD,OAC5B4J,aAAK3M,GAAW7K,OAAQ,CACtBG,MAAO,EACPC,OAAQ,EACR4S,OAAQ,OACRD,MAAO,OACP1I,KAAMuD,EAAElD,UAXd,SAe2DqN,aAAII,GAf/D,OAwBE,OATMD,EAfR,OAiBQ/R,EAA0C+R,EAAa3P,KAAI,SAACqF,EAAGnF,GAAJ,MAAe,CAC9E2P,OAAQ5N,EAAS/B,GAAOiC,KACxBd,SAAUY,EAAS/B,GAAOzH,KAC1B6I,YAAa+D,EAAE9N,SApBnB,UAwBQsX,aAAIzQ,EAAiBD,qBAAqBP,IAxBlD,yCA2BA,SAAU0R,KAAV,kEAEI,OAFJ,kBAEUE,aAAI,CACRP,aAAKC,IACLD,aAAKE,IACLF,aAAKG,IACLH,aAAKI,MANX,OASI,OATJ,SASUR,aAAIzQ,EAAiBN,oBAT/B,8BAWI,OAXJ,mCAWU+Q,aAAIzQ,EAAiBL,kBAX/B,QAYI0J,QAAQC,IAAI,iCAAZ,MAZJ,sDAgBe,SAAU6H,KAAV,kEACb,OADa,SACPO,aAAW1R,EAAiBP,UAAUkJ,KAAMuI,IADrC,wC,iBCrFLtE,I,aAUAI,I,aAIe2E,IAdzB,SAAU/E,GAAiBnS,GAA3B,wEAE4C,OAF5C,kBAEkDoW,aAAK3M,GAAW7K,OAAQoB,EAAOE,SAFjF,OAGI,OADMzB,EAFV,gBAGUuX,aAAIxD,GAAeJ,wBAAwB3T,IAHrD,8BAMI,OANJ,yBAKImQ,QAAQC,IAAI,+BAAZ,MALJ,UAMUmH,aAAIxD,GAAeH,0BAN7B,sDAUA,SAAUE,GAAsBvS,GAAhC,kEACE,OADF,SACQgW,aAAIxD,GAAeF,UAAUtS,EAAOE,UAD5C,wCAIe,SAAUgX,KAAV,kEAEb,OAFa,SAEPD,aAAWzE,GAAeL,iBAAiBjE,KAAMiE,IAF1C,OAIb,OAJa,SAIPgF,aAAS,IAAK3E,GAAeD,sBAAsBrE,KAAMqE,IAJlD,wC,iBCfL3J,I,aASewO,IATzB,SAAUxO,KAAV,wEAEqC,OAFrC,kBAE2CwN,aAAKzX,EAAQC,QAFxD,OAGI,OADMqK,EAFV,gBAGU+M,aAAIjN,GAAYF,qBAAqBI,IAH/C,8BAKI,OALJ,mCAKU+M,aAAIjN,GAAYD,uBAL1B,sDASe,SAAUsO,KAAV,kEACb,OADa,SACPH,aAAWlO,GAAYH,cAAcsF,KAAMtF,IADpC,wC,iBCRUyO,IAAV,SAAUA,KAAV,kEACb,OADa,SACPV,aAAI,CAACd,KAAYa,KAAiBQ,KAAeE,OAD1C,wCCKf,IAAME,GAAcC,aAAgB,CAClCC,OAAQC,YAAc/Z,GACtBga,QAASC,GACTC,KAAMrX,EACNkF,UAAWK,GACXsB,QAASyL,GACT5J,KAAMO,KAGFqO,GAAiBC,eACVC,GAAQC,YAAe,CAClCxX,QAAS8W,GACTW,WAAY,SAACC,GAAD,OACVA,IAAuBC,OAAON,GAAgBO,aAAiB1a,OAGnEma,GAAeQ,IAAIhB,I,cCfC5U,QACW,cAA7B6V,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASvF,MACvB,2DCLNwF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUZ,MAAOA,GAAjB,SACE,eAAC,IAAD,CAAiBra,QAASA,EAA1B,UACE,cAACkb,EAAA,EAAD,IACA,cAAC,GAAD,IACA,cAAC,KAAD,CACExU,SAAS,YACTyU,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,WAKpBC,SAASC,eAAe,SDuGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhF,MAAK,SAACiF,GACLA,EAAaC,gBAEdC,OAAM,SAACtb,GACNsQ,QAAQtQ,MAAMA,EAAM0M,c","file":"static/js/main.3d930c29.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\n","import axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\n\nconst baseApiUrl = process.env.REACT_APP_BASE_API_URL;\nconst axiosClient = axios.create({\n  baseURL: baseApiUrl,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add a request interceptor\naxiosClient.interceptors.request.use(\n  function (config: AxiosRequestConfig) {\n    // Do something before request is sent\n    return config;\n  },\n  function (error) {\n    // Do something with request error\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor\naxiosClient.interceptors.response.use(\n  function (response: AxiosResponse) {\n    // Any status code that lie within the range of 2xx cause this function to trigger\n    // Do something with response data\n    return response.data;\n  },\n  function (error) {\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\n    // Do something with response error\n    return Promise.reject(error);\n  }\n);\n\nexport default axiosClient;\n","import { City, ListResponse } from 'models';\nimport axiosClient from './axiosClient';\n\nconst cityApi = {\n  getAll(): Promise<ListResponse<City>> {\n    const url = '/cities';\n    return axiosClient.get(url, {\n      params: {\n        _page: 1,\n        _limit: 50,\n      },\n    });\n  },\n};\n\nexport default cityApi;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { User } from 'models';\n\nexport interface LoginPayload {\n  username: string;\n  password: string;\n}\n\nexport interface AuthState {\n  isLoggedIn: boolean;\n  logging?: boolean;\n  currentUser?: User;\n}\n\nconst initialState: AuthState = {\n  isLoggedIn: false,\n  logging: false,\n  currentUser: undefined,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    login(state, action: PayloadAction<LoginPayload>) {\n      state.logging = true;\n    },\n    loginSuccess(state, action: PayloadAction<User>) {\n      state.logging = false;\n      state.isLoggedIn = true;\n      state.currentUser = action.payload;\n    },\n    loginFailed(state, action: PayloadAction<string>) {\n      state.logging = false;\n    },\n    logout(state) {\n      state.logging = false;\n      state.isLoggedIn = false;\n      state.currentUser = undefined;\n    },\n  },\n});\n\n// Actions\nexport const authActions = authSlice.actions;\n\n// Selectors\nexport const selectIsLoggedIn = (state: any) => state.auth.isLoggedIn;\nexport const selectLogging = (state: any) => state.auth.logging;\n\n// Reducer\nconst authReducer = authSlice.reducer;\nexport default authReducer;\n","import { Box, Button, makeStyles, Paper, Typography } from '@material-ui/core';\nimport { useAppDispatch } from 'app/hooks';\nimport * as React from 'react';\nimport { authActions } from '../authSlice';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexFlow: 'row nowrap',\n    justifyContent: 'center',\n    alignItems: 'center',\n    minHeight: '100vh',\n  },\n\n  box: {\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function LoginPage() {\n  const classes = useStyles();\n  const dispatch = useAppDispatch();\n\n  const handleLoginClick = () => {\n    debugger;\n    dispatch(\n      authActions.login({\n        username: '',\n        password: '',\n      })\n    );\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper elevation={1} className={classes.box}>\n        <Typography variant=\"h5\" component=\"h1\">\n          Student Management\n        </Typography>\n\n        <Box mt={4}>\n          <Button fullWidth variant=\"contained\" color=\"primary\" onClick={handleLoginClick}>\n            Fake Login\n          </Button>\n        </Box>\n      </Paper>\n    </div>\n  );\n}\n","import * as React from 'react';\n\nexport interface NotFoundProps {}\n\nexport function NotFound(props: NotFoundProps) {\n  return <div> Not Found </div>;\n}\n","import * as React from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\n\nexport function PrivateRoute(props: RouteProps) {\n  // Check if user is logged in\n  // If yes, show route\n  // Otherwise, redirect to login page\n\n  const isLogggedIn = Boolean(localStorage.getItem('access_token'));\n  if (!isLogggedIn) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return <Route {...props} />;\n}\n","import List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Dashboard, PeopleAlt } from '@material-ui/icons';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport interface SidebarProps {}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n\n  link: {\n    color: 'inherit',\n    textDecoration: 'none',\n    '&.active > div': {\n      backgroundColor: theme.palette.action.selected,\n    },\n  },\n}));\n\nexport function Sidebar(props: SidebarProps) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <List component=\"nav\" aria-label=\"dashboard student\">\n        <NavLink to=\"/admin/dashboard\" className={classes.link}>\n          <ListItem button>\n            <ListItemIcon>\n              <Dashboard />\n            </ListItemIcon>\n            <ListItemText primary=\"Dashboard\" />\n          </ListItem>\n        </NavLink>\n\n        <NavLink to=\"/admin/students\" className={classes.link}>\n          <ListItem button>\n            <ListItemIcon>\n              <PeopleAlt />\n            </ListItemIcon>\n            <ListItemText primary=\"Student\" />\n          </ListItem>\n        </NavLink>\n      </List>\n    </div>\n  );\n}\n","import AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { useAppDispatch } from 'app/hooks';\nimport { authActions } from 'features/auth/authSlice';\nimport React from 'react';\n\nexport interface HeaderProps {}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport function Header(props: HeaderProps) {\n  const classes = useStyles();\n  const dispatch = useAppDispatch();\n\n  const handleLogoutClick = () => {\n    dispatch(authActions.logout());\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Student Management\n          </Typography>\n          <Button color=\"inherit\" onClick={handleLogoutClick}>\n            Logout\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from 'app/store';\nimport { Student } from 'models';\n\nexport interface DashboardStatistics {\n  maleCount: number;\n  femaleCount: number;\n  highMarkCount: number;\n  lowMarkCount: number;\n}\n\nexport interface RankingByCity {\n  cityId: string;\n  cityName: string;\n  rankingList: Student[];\n}\n\nexport interface DashboardState {\n  loading: boolean;\n  statistics: DashboardStatistics;\n  highestStudentList: Student[];\n  lowestStudentList: Student[];\n  rankingByCityList: RankingByCity[];\n}\n\nconst initialState: DashboardState = {\n  loading: false,\n  statistics: {\n    maleCount: 0,\n    femaleCount: 0,\n    highMarkCount: 0,\n    lowMarkCount: 0,\n  },\n  highestStudentList: [],\n  lowestStudentList: [],\n  rankingByCityList: [],\n};\n\nconst dashboardSlice = createSlice({\n  name: 'dashboard',\n  initialState,\n  reducers: {\n    fetchData(state) {\n      state.loading = true;\n    },\n    fetchDataSuccess(state) {\n      state.loading = false;\n    },\n    fetchDataError(state) {\n      state.loading = false;\n    },\n    setStatistics(state, action: PayloadAction<DashboardStatistics>) {\n      state.statistics = action.payload;\n    },\n    setHighestStudentList(state, action: PayloadAction<Student[]>) {\n      state.highestStudentList = action.payload;\n    },\n    setLowestStudentList(state, action: PayloadAction<Student[]>) {\n      state.lowestStudentList = action.payload;\n    },\n    setRankingByCityList(state, action: PayloadAction<RankingByCity[]>) {\n      state.rankingByCityList = action.payload;\n    },\n  },\n});\n\n// Actions\nexport const dashboardActions = dashboardSlice.actions;\n\n// Selectors\nexport const selectDashboardLoading = (state: RootState) => state.dashboard.loading;\nexport const selectDashboardStatistics = (state: RootState) => state.dashboard.statistics;\nexport const selectHighestStudentList = (state: RootState) => state.dashboard.highestStudentList;\nexport const selectLowestStudentList = (state: RootState) => state.dashboard.lowestStudentList;\nexport const selectRankingByCityList = (state: RootState) => state.dashboard.rankingByCityList;\n\n// Reducer\nconst dashboardReducer = dashboardSlice.reducer;\nexport default dashboardReducer;\n","import { Box, makeStyles, Paper, Typography } from '@material-ui/core';\nimport * as React from 'react';\n\nexport interface StatisticItemProps {\n  icon: React.ReactElement;\n  label: string;\n  value: string | number;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexFlow: 'row nowrap',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: theme.spacing(1, 2),\n    border: `1px solid ${theme.palette.divider}`,\n  },\n  label: {\n    textTransform: 'uppercase',\n  },\n}));\n\nexport function StatisticItem(props: StatisticItemProps) {\n  const { icon, label, value } = props;\n  const classes = useStyles();\n  return (\n    <Paper className={classes.root}>\n      <Box>{icon}</Box>\n      <Box>\n        <Typography variant=\"h5\" align=\"right\">\n          {value}\n        </Typography>\n        <Typography variant=\"caption\" className={classes.label}>\n          {label}\n        </Typography>\n      </Box>\n    </Paper>\n  );\n}\n","import { Box, Paper, Typography, makeStyles } from '@material-ui/core';\nimport * as React from 'react';\n\nexport interface WidgetProps {\n  title: string;\n  children: any;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    border: `1px solid ${theme.palette.divider}`,\n  },\n}));\n\nexport function Widget({ title, children }: WidgetProps) {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.root}>\n      <Typography variant=\"button\">{title}</Typography>\n\n      <Box mt={2}>{children}</Box>\n    </Paper>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Student } from 'models';\nimport React from 'react';\n\nconst useStyles = makeStyles({\n  table: {},\n});\n\nexport interface StudentRankingListProps {\n  studentList: Student[];\n}\nexport function StudentRankingList({ studentList }: StudentRankingListProps) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer>\n      <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\">#</TableCell>\n            <TableCell align=\"left\">Name</TableCell>\n            <TableCell align=\"right\"> Mark</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {studentList.map((student, index) => (\n            <TableRow key={student.id}>\n              <TableCell>{index + 1}</TableCell>\n              <TableCell align=\"left\">{student.name}</TableCell>\n              <TableCell align=\"right\">{student.mark}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import { useAppDispatch, useAppSelector } from 'app/hooks';\nimport { useEffect } from 'react';\nimport * as React from 'react';\nimport {\n  dashboardActions,\n  selectDashboardLoading,\n  selectDashboardStatistics,\n  selectHighestStudentList,\n  selectLowestStudentList,\n  selectRankingByCityList,\n} from './dashboardSlice';\nimport { Box, Grid, LinearProgress, makeStyles, Typography } from '@material-ui/core';\nimport { StatisticItem } from './components/StatisticItem';\nimport { ChatBubble, ChatRounded, LinearScale, PeopleAlt } from '@material-ui/icons';\nimport { Widget } from './components/Widget';\nimport { StudentRankingList } from './components/StudentRankingList';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'relative',\n    paddingTop: theme.spacing(1),\n  },\n  loading: {\n    position: 'absolute',\n    top: theme.spacing(-1),\n    width: '100%',\n  },\n}));\n\nexport default function Dashboard() {\n  const dispatch = useAppDispatch();\n  const loading = useAppSelector(selectDashboardLoading);\n  const statistics = useAppSelector(selectDashboardStatistics);\n  const highestStudentList = useAppSelector(selectHighestStudentList);\n  const lowestStudentList = useAppSelector(selectLowestStudentList);\n  const rankingByCityList = useAppSelector(selectRankingByCityList);\n  const classes = useStyles();\n\n  useEffect(() => {\n    dispatch(dashboardActions.fetchData());\n  }, [dispatch]);\n\n  return (\n    <Box className={classes.root}>\n      {/* Loading */}\n      {loading && <LinearProgress className={classes.loading} />}\n\n      {/* Statistics Section */}\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6} lg={3} xl={3}>\n          <StatisticItem\n            icon={<PeopleAlt fontSize=\"large\" color=\"primary\" />}\n            label=\"male\"\n            value={statistics.maleCount}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6} lg={3} xl={3}>\n          <StatisticItem\n            icon={<ChatRounded fontSize=\"large\" color=\"primary\" />}\n            label=\"female\"\n            value={statistics.femaleCount}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6} lg={3} xl={3}>\n          <StatisticItem\n            icon={<ChatBubble fontSize=\"large\" color=\"primary\" />}\n            label=\"mark >= 8\"\n            value={statistics.highMarkCount}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6} lg={3} xl={3}>\n          <StatisticItem\n            icon={<LinearScale fontSize=\"large\" color=\"primary\" />}\n            label=\"mark <= 5\"\n            value={statistics.lowMarkCount}\n          />\n        </Grid>\n      </Grid>\n\n      {/* All Student Ranking Section */}\n      <Box mt={4}>\n        <Typography variant=\"h4\">All Students</Typography>\n\n        <Box mt={4}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={6} lg={6}>\n              <Widget title=\"Student with highest mark\">\n                <StudentRankingList studentList={highestStudentList} />\n              </Widget>\n            </Grid>\n\n            <Grid item xs={12} md={6} lg={6}>\n              <Widget title=\"Student with lowest mark\">\n                <StudentRankingList studentList={lowestStudentList} />\n              </Widget>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n\n      {/* Ranking by City Section */}\n      <Box mt={4}>\n        <Typography variant=\"h4\">Ranking By City</Typography>\n\n        <Box mt={4}>\n          <Grid container spacing={3}>\n            {rankingByCityList.map((ranking) => (\n              <Grid item xs={12} md={6} lg={6}>\n                <Widget title={ranking.cityName}>\n                  <StudentRankingList studentList={ranking.rankingList} />\n                </Widget>\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n","import { createSlice, PayloadAction, createSelector } from '@reduxjs/toolkit';\nimport { RootState } from 'app/store';\nimport { City, ListResponse } from 'models';\n\nexport interface CityState {\n  list: City[];\n  loading: boolean;\n}\n\nconst initialState: CityState = {\n  list: [],\n  loading: false,\n};\n\nconst citySlice = createSlice({\n  name: 'city',\n  initialState,\n  reducers: {\n    fetchCityList(state) {\n      state.loading = true;\n    },\n    fetchCityListSuccess(state, action: PayloadAction<ListResponse<City>>) {\n      state.loading = false;\n      state.list = action.payload.data;\n    },\n    fetchCityListFailed(state) {\n      state.loading = false;\n    },\n  },\n});\n\n// Actions\nexport const cityActions = citySlice.actions;\n\n// Selectors\nexport const selectCityList = (state: RootState) => state.city.list;\nexport const selectCityMap = createSelector(selectCityList, (cityList) => {\n  return cityList.reduce((map: { [key: string]: City }, city: City) => {\n    map[city.code] = city;\n    return map;\n  }, {});\n});\n\nexport const selectCityOptions = createSelector(selectCityList, (cityList) =>\n  [\n    {\n      name: 'No select',\n      code: '',\n    },\n    ...cityList,\n  ].map((city) => ({\n    label: city.name,\n    value: city.code,\n  }))\n);\n// Reducer\nconst cityReducer = citySlice.reducer;\nexport default cityReducer;\n","import { Student, ListResponse, ListParams } from 'models';\nimport axiosClient from './axiosClient';\n\nconst studentApi = {\n  getAll(params: ListParams): Promise<ListResponse<Student>> {\n    const url = '/students';\n    return axiosClient.get(url, {\n      params,\n    });\n  },\n\n  getById(id: string): Promise<Student> {\n    const url = `/students/${id}`;\n    return axiosClient.get(url);\n  },\n\n  add(data: Student): Promise<Student> {\n    const url = '/students';\n    return axiosClient.post(url, data);\n  },\n\n  update(data: Partial<Student>): Promise<Student> {\n    const url = `/students/${data?.id}`;\n    return axiosClient.patch(url, data);\n  },\n\n  remove(id: string): Promise<any> {\n    const url = `/students/${id}`;\n    return axiosClient.delete(url);\n  },\n};\n\nexport default studentApi;\n","import React, { InputHTMLAttributes } from 'react';\nimport { Control, useController } from 'react-hook-form';\nimport { TextField } from '@material-ui/core';\n\nexport interface InputFieldProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  control: Control<any>;\n  label: string;\n}\n\nexport function InputField({ name, control, label, ...inputProps }: InputFieldProps) {\n  const {\n    field: { value, onBlur, onChange, ref },\n    fieldState: { invalid, error },\n  } = useController({\n    name,\n    control,\n  });\n  return (\n    <TextField\n      label={label}\n      fullWidth\n      margin=\"normal\"\n      variant=\"outlined\"\n      value={value}\n      inputRef={ref}\n      error={invalid}\n      helperText={error?.message}\n      inputProps={inputProps}\n      size=\"small\"\n      onBlur={onBlur}\n      onChange={onChange}\n    />\n  );\n}\n","import { FormHelperText } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport React from 'react';\nimport { Control, useController } from 'react-hook-form';\n\nexport interface RadioOption {\n  label: string;\n  value: number | string;\n  disabled?: boolean;\n}\n\nexport interface RadioGroupFieldProps {\n  name: string;\n  control: Control<any>;\n  label: string;\n  disabled?: boolean;\n  options: RadioOption[];\n  row?: boolean;\n}\n\nexport function RadioGroupField({\n  name,\n  control,\n  label,\n  disabled,\n  options,\n  row,\n}: RadioGroupFieldProps) {\n  const {\n    field: { value, onBlur, onChange },\n    fieldState: { invalid, error },\n  } = useController({\n    name,\n    control,\n  });\n  return (\n    <FormControl component=\"fieldset\" disabled={disabled} error={invalid} fullWidth margin=\"normal\">\n      <FormLabel component=\"legend\">{label}</FormLabel>\n      <RadioGroup row={row} name={name} onChange={onChange} onBlur={onBlur} value={value}>\n        {options.map((option) => (\n          <FormControlLabel\n            key={option.value}\n            disabled={option.disabled}\n            value={option.value}\n            control={<Radio />}\n            label={option.label}\n          />\n        ))}\n      </RadioGroup>\n      <FormHelperText>{error?.message}</FormHelperText>\n    </FormControl>\n  );\n}\n","import { FormHelperText, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport React from 'react';\nimport { Control, useController } from 'react-hook-form';\n\nexport interface SelectOption {\n  label: string;\n  value: number | string;\n  disabled?: boolean;\n}\n\nexport interface SelectFieldProps {\n  name: string;\n  control: Control<any>;\n  label: string;\n  disabled?: boolean;\n  options: SelectOption[];\n  row?: boolean;\n}\n\nexport function SelectField({ name, control, label, disabled, options }: SelectFieldProps) {\n  const {\n    field: { value, onBlur, onChange },\n    fieldState: { invalid, error },\n  } = useController({\n    name,\n    control,\n  });\n  return (\n    <FormControl\n      variant=\"outlined\"\n      size=\"small\"\n      fullWidth\n      error={invalid}\n      disabled={disabled}\n      margin=\"normal\"\n    >\n      <InputLabel id={`${name}_label`}>{label}</InputLabel>\n      <Select\n        labelId={`${name}_label`}\n        value={value}\n        onChange={onChange}\n        onBlur={onBlur}\n        label={label}\n      >\n        {options.map((option) => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </Select>\n      <FormHelperText>{error?.message}</FormHelperText>\n    </FormControl>\n  );\n}\n","import { Box, Button, CircularProgress } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { useAppSelector } from 'app/hooks';\nimport { InputField, RadioGroupField, SelectField } from 'components/FormFields';\nimport { selectCityOptions } from 'features/city/citySilce';\nimport { Student } from 'models';\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .required('Please enter name')\n    .test('two-words', 'Please enter at least two words.', (value) => {\n      if (!value) return true;\n      const parts = value.split(' ');\n      return parts.filter((x) => Boolean(x)).length >= 2;\n    }),\n  age: yup\n    .number()\n    .positive('Please enter a positive number.')\n    .integer('Please enter an integer.')\n    .min(18, 'Min is 18.')\n    .max(60, 'Max is 60.')\n    .required('Please enter age.')\n    .typeError('Please enter a valid number.'),\n  mark: yup\n    .number()\n    .min(0, 'Min is 0.')\n    .max(10, 'Max is 10.')\n    .required('Please enter mark.')\n    .typeError('Please enter a valid number.'),\n  gender: yup\n    .string()\n    .oneOf(['male', 'female'], 'Please select either male or female.')\n    .required('Please select gender.'),\n  city: yup.string().required('Please select a city.'),\n});\n\nexport interface StudentFormProps {\n  initialValues?: Student;\n  onSubmit?: (formValues: Student) => void;\n}\n\nexport default function StudentForm({ initialValues, onSubmit }: StudentFormProps) {\n  const {\n    control,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = useForm<Student>({\n    defaultValues: initialValues,\n    resolver: yupResolver(schema),\n  });\n\n  const cityOptions = useAppSelector(selectCityOptions);\n  const [error, setError] = useState('');\n\n  const handleFormSubmit = async (formValues: Student) => {\n    try {\n      // Clear previous error message\n      setError('');\n      await onSubmit?.(formValues);\n    } catch (err: any) {\n      setError(err.message);\n    }\n  };\n  return (\n    <Box maxWidth={400}>\n      <form onSubmit={handleSubmit(handleFormSubmit)}>\n        {/* Form Fields */}\n        <InputField name=\"name\" control={control} label=\"Full Name\" />\n\n        <RadioGroupField\n          name=\"gender\"\n          control={control}\n          label=\"Gender\"\n          row={true}\n          options={[\n            {\n              label: 'Male',\n              value: 'male',\n            },\n            {\n              label: 'Female',\n              value: 'female',\n            },\n          ]}\n        />\n        <InputField name=\"age\" control={control} label=\"Age\" type=\"number\" />\n        <InputField name=\"mark\" control={control} label=\"Mark\" type=\"number\" />\n\n        <SelectField name=\"city\" control={control} label=\"City\" options={cityOptions} />\n\n        {error && <Alert severity=\"error\">{error}</Alert>}\n\n        <Box>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={isSubmitting}>\n            {isSubmitting && <CircularProgress color=\"primary\" size={16} />} &nbsp;Save\n          </Button>\n        </Box>\n      </form>\n    </Box>\n  );\n}\n","import { Box, Typography } from '@material-ui/core';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport { ChevronLeft } from '@material-ui/icons';\nimport { Student } from 'models';\nimport studentApi from 'api/studentApi';\nimport StudentForm from '../components/StudentForm';\nimport { toast } from 'react-toastify';\n\nexport default function AddEditPage() {\n  const { studentId } = useParams<{ studentId: string }>();\n  const isEdit = Boolean(studentId);\n  const [student, setStudent] = useState<Student>();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!studentId) return;\n\n    // IFFE\n    (async () => {\n      try {\n        const data: Student = await studentApi.getById(studentId);\n        setStudent(data);\n      } catch (error) {\n        console.log('Failed to fetch student details', error);\n      }\n    })();\n  }, [studentId]);\n\n  const handleStudentFormSubmit = async (formValues: Student) => {\n    // TODO: Handle submit form here\n    if (isEdit) {\n      await studentApi.update(formValues);\n    } else {\n      await studentApi.add(formValues);\n    }\n\n    toast.success('Save student successfully!');\n    history.push('/admin/students');\n  };\n\n  const initialValues: Student = {\n    name: '',\n    age: 0,\n    mark: 0,\n    city: '',\n    gender: 'male',\n    ...student,\n  } as Student;\n\n  return (\n    <Box>\n      <Link to={'/admin/students'}>\n        <Typography variant=\"caption\" style={{ display: 'flex', alignItems: 'center' }}>\n          <ChevronLeft /> &nbsp;Back to student list\n        </Typography>\n      </Link>\n\n      <Typography variant=\"h4\">{isEdit ? 'Update student info' : 'Add new student'}</Typography>\n\n      {/* Student Form */}\n      {(!isEdit || Boolean(student)) && (\n        <Box mt={3}>\n          <StudentForm initialValues={initialValues} onSubmit={handleStudentFormSubmit} />\n        </Box>\n      )}\n    </Box>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\nimport { City, Student } from 'models';\nimport React from 'react';\nimport { capitalizeString, getMarkColor } from 'utils';\nimport {\n  Box,\n  Paper,\n  Dialog,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Button,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  table: {},\n  edit: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport interface StudentTableProps {\n  studentList: Student[];\n  cityMap: { [key: string]: City };\n  onEdit?: (student: Student) => void;\n  onRemove?: (student: Student) => void;\n}\nexport default function StudentTable({\n  studentList,\n  cityMap,\n  onEdit,\n  onRemove,\n}: StudentTableProps) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [selectedStudent, setSelectedStudent] = React.useState<Student>();\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleRemoveClick = (student: Student) => {\n    setOpen(true);\n    setSelectedStudent(student);\n  };\n\n  const handleRemoveStudentConfirm = () => {\n    setOpen(false);\n    if (onRemove) {\n      onRemove(selectedStudent as Student);\n    }\n  };\n\n  return (\n    <>\n      {/* Table */}\n      <TableContainer component={Paper}>\n        <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Id</TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell>Gender</TableCell>\n              <TableCell>Mark</TableCell>\n              <TableCell>City</TableCell>\n              <TableCell align=\"center\">Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {studentList.map((student) => (\n              <TableRow key={student.id}>\n                <TableCell>{student.id}</TableCell>\n                <TableCell>{student.name}</TableCell>\n                <TableCell>{capitalizeString(student.gender)}</TableCell>\n                <TableCell>\n                  <Box color={getMarkColor(student.mark)} fontWeight=\"bold\">\n                    {student.mark}\n                  </Box>\n                </TableCell>\n                <TableCell>{cityMap[student.city]?.name}</TableCell>\n                <TableCell align=\"right\">\n                  <Button\n                    size=\"small\"\n                    color=\"primary\"\n                    onClick={() => onEdit?.(student)}\n                    className={classes.edit}\n                  >\n                    Edit\n                  </Button>\n                  <Button size=\"small\" color=\"secondary\" onClick={() => handleRemoveClick(student)}>\n                    Remove\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      {/* Dialog */}\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{'Remove student?'}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Would you like to remove student has name is &apos;{selectedStudent?.name}&apos; ?<br />\n            This action can&apos;t undo.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleRemoveStudentConfirm} autoFocus>\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","export const capitalizeString = (str: string): string => {\n  if (!str) return '';\n\n  return `${str[0].toUpperCase()}${str.slice(1)}`;\n};\n\nexport const getMarkColor = (mark: number): string => {\n  if (mark >= 8) return 'green';\n  if (mark >= 4) return 'goldenrod';\n  return 'red';\n};\n","import { City, ListParams } from 'models';\nimport React, { ChangeEvent, useRef } from 'react';\nimport {\n  Box,\n  Grid,\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  MenuItem,\n  Select,\n  Button,\n} from '@material-ui/core';\nimport { Search } from '@material-ui/icons';\n\nexport interface StudentFiltersProps {\n  filter: ListParams;\n  cityList: City[];\n  onChange?: (newFilter: ListParams) => void;\n  onSearchChange?: (newFilter: ListParams) => void;\n}\n\nexport default function StudentFilters({\n  filter,\n  cityList,\n  onChange,\n  onSearchChange,\n}: StudentFiltersProps) {\n  const searchNameRef = useRef<HTMLInputElement>();\n  const handleSearchChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (!onSearchChange) return;\n    const newFilter: ListParams = {\n      ...filter,\n      name_like: e.target.value,\n      _page: 1,\n    };\n    onSearchChange(newFilter);\n  };\n\n  const handleCityChange = (e: ChangeEvent<{ name?: string; value: unknown }>) => {\n    if (!onChange) return;\n    const newFilter: ListParams = {\n      ...filter,\n      city: e.target.value || undefined,\n      _page: 1,\n    };\n    onChange(newFilter);\n  };\n\n  const handleSortChange = (e: ChangeEvent<{ name?: string; value: unknown }>) => {\n    if (!onChange) return;\n    const [sort, order] = (e.target.value as string).split('.');\n    const newFilter: ListParams = {\n      ...filter,\n      _sort: sort || undefined,\n      _order: (order as 'asc' | 'desc') || undefined,\n    };\n    onChange(newFilter);\n  };\n\n  const handleClearFilter = () => {\n    if (!onChange) return;\n    const newFilter: ListParams = {\n      ...filter,\n      _sort: undefined,\n      _order: undefined,\n      _page: 1,\n      city: undefined,\n      name_like: undefined,\n    };\n    onChange(newFilter);\n    if (searchNameRef.current) {\n      searchNameRef.current.value = '';\n    }\n  };\n\n  return (\n    <Box>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <FormControl fullWidth variant=\"outlined\" size=\"small\">\n            <InputLabel htmlFor=\"searchByName\">Search by name</InputLabel>\n            <OutlinedInput\n              id=\"searchByName\"\n              label=\"Search by name\"\n              endAdornment={<Search />}\n              labelWidth={60}\n              onChange={handleSearchChange}\n              inputRef={searchNameRef}\n            />\n          </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={6} lg={2}>\n          <FormControl variant=\"outlined\" size=\"small\" fullWidth>\n            <InputLabel id=\"filterByCity\">Filter by city</InputLabel>\n            <Select\n              labelId=\"filterByCity\"\n              value={filter.city || ''}\n              onChange={handleCityChange}\n              label=\"Filter by city\"\n            >\n              <MenuItem value=\"\">\n                <em>All</em>\n              </MenuItem>\n              {cityList.map((city) => (\n                <MenuItem key={city.code} value={city.code}>\n                  {city.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={6} lg={2}>\n          <FormControl variant=\"outlined\" size=\"small\" fullWidth>\n            <InputLabel id=\"sortBy\">Sort</InputLabel>\n            <Select\n              labelId=\"sortBy\"\n              value={filter._sort ? `${filter._sort}.${filter._order}` : ''}\n              onChange={handleSortChange}\n              label=\"Sort\"\n            >\n              <MenuItem value=\"\">\n                <em>No sort</em>\n              </MenuItem>\n              <MenuItem value=\"name.asc\">Name ASC</MenuItem>\n              <MenuItem value=\"name.desc\">Name DESC</MenuItem>\n              <MenuItem value=\"mark.asc\">Mark ASC</MenuItem>\n              <MenuItem value=\"mark.desc\">Mark DESC</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={6} lg={2}>\n          <Button variant=\"outlined\" color=\"primary\" onClick={handleClearFilter}>\n            Clear Filter\n          </Button>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from 'app/store';\nimport { ListParams, ListResponse, PaginationParams, Student } from 'models';\n\nexport interface StudentState {\n  loading: boolean;\n  list: Student[];\n  filter: ListParams;\n  pagination: PaginationParams;\n}\n\nconst initialState: StudentState = {\n  loading: false,\n  list: [],\n  filter: {\n    _page: 1,\n    _limit: 15,\n  },\n  pagination: {\n    _limit: 1,\n    _page: 1,\n    _totalRows: 1,\n  },\n};\n\nconst studentSlice = createSlice({\n  name: 'student',\n  initialState,\n  reducers: {\n    fetchStudentList(state, action: PayloadAction<ListParams>) {\n      state.loading = true;\n    },\n    fetchStudentListSuccess(state, action: PayloadAction<ListResponse<Student>>) {\n      state.loading = false;\n      state.list = action.payload.data;\n      state.pagination = action.payload.pagination;\n    },\n    fetchStudentListFailed(state) {\n      state.loading = false;\n    },\n\n    setFilter(state, action: PayloadAction<ListParams>) {\n      state.filter = action.payload;\n    },\n\n    setFilterWithDebounce(state, action: PayloadAction<ListParams>) {},\n  },\n});\n\n// Actions\nexport const studentActions = studentSlice.actions;\n\n// Selectors\nexport const selectStudentList = (state: RootState) => state.student.list;\nexport const selectStudentLoading = (state: RootState) => state.student.loading;\nexport const selectStudentFilter = (state: RootState) => state.student.filter;\nexport const selectStudentPagination = (state: RootState) => state.student.pagination;\n\n// Reducer\nconst studentReducer = studentSlice.reducer;\nexport default studentReducer;\n","import { Box, Typography, Button, makeStyles, LinearProgress } from '@material-ui/core';\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\nimport React, { useEffect } from 'react';\nimport { Pagination } from '@material-ui/lab';\nimport StudentTable from '../components/StudentTable';\nimport StudentFilters from '../components/StudentFilters';\nimport {\n  selectStudentFilter,\n  selectStudentList,\n  selectStudentLoading,\n  selectStudentPagination,\n  studentActions,\n} from '../studentSlice';\nimport { selectCityList, selectCityMap } from 'features/city/citySilce';\nimport { ListParams, Student } from 'models';\nimport { useRouteMatch, useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport studentApi from 'api/studentApi';\nimport { toast } from 'react-toastify';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'relative',\n    paddingTop: theme.spacing(1),\n  },\n  titleContainer: {\n    display: 'flex',\n    flexFlow: 'row nowrap',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: theme.spacing(4),\n  },\n  loading: {\n    position: 'absolute',\n    width: '100%',\n    top: theme.spacing(-1),\n  },\n}));\n\nexport default function ListPage() {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n  const studentList = useAppSelector(selectStudentList);\n  const pagination = useAppSelector(selectStudentPagination);\n  const filter = useAppSelector(selectStudentFilter);\n  const loading = useAppSelector(selectStudentLoading);\n  const cityMap = useAppSelector(selectCityMap);\n  const cityList = useAppSelector(selectCityList);\n  const match = useRouteMatch();\n  const history = useHistory();\n\n  const handlePageChange = (event: any, page: number) => {\n    dispatch(\n      studentActions.setFilter({\n        ...filter,\n        _page: page,\n      })\n    );\n  };\n\n  useEffect(() => {\n    dispatch(studentActions.fetchStudentList(filter));\n  }, [dispatch, filter]);\n\n  const handleSearchChange = (newFilter: ListParams) => {\n    dispatch(studentActions.setFilterWithDebounce(newFilter));\n  };\n\n  const handleFilterChange = (newFilter: ListParams) => {\n    dispatch(studentActions.setFilter(newFilter));\n  };\n\n  const handleEditStudent = (student: Student) => {\n    history.push(`${match.path}/${student.id}`);\n  };\n\n  const handleRemoveStudent = async (student: Student) => {\n    try {\n      // Call API to remove student\n      await studentApi.remove(student?.id || '');\n\n      toast.success('Remove student successfully!');\n\n      // Trigger re-fetch student list with current filter\n      dispatch(studentActions.setFilter({ ...filter }));\n    } catch (error) {\n      // Show toast error\n      console.log('Remove student error', error);\n    }\n  };\n\n  return (\n    <Box className={classes.root}>\n      {/* Loading */}\n      {loading && <LinearProgress className={classes.loading} />}\n\n      <Box className={classes.titleContainer}>\n        <Typography variant=\"h4\">Students</Typography>\n        <Link to={`${match.path}/add`} style={{ textDecoration: 'none' }}>\n          <Button variant=\"contained\" color=\"primary\">\n            Add new student\n          </Button>\n        </Link>\n      </Box>\n\n      {/* Student Filters */}\n      <Box mb={2}>\n        <StudentFilters\n          filter={filter}\n          cityList={cityList}\n          onSearchChange={handleSearchChange}\n          onChange={handleFilterChange}\n        />\n      </Box>\n\n      {/* Student Table */}\n      <StudentTable\n        studentList={studentList}\n        cityMap={cityMap}\n        onEdit={handleEditStudent}\n        onRemove={handleRemoveStudent}\n      />\n\n      {/* Pagination */}\n      <Box mt={2} display=\"flex\" justifyContent=\"center\">\n        <Pagination\n          color=\"primary\"\n          count={Math.ceil(pagination?._totalRows / pagination?._limit)}\n          page={pagination._page}\n          onChange={handlePageChange}\n        />\n      </Box>\n    </Box>\n  );\n}\n","import { useAppDispatch } from 'app/hooks';\nimport { cityActions } from 'features/city/citySilce';\nimport React, { useEffect } from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport AddEditPage from './pages/AddEditPage';\nimport ListPage from './pages/ListPage';\n\nexport default function StudentFeature() {\n  const routeMatch = useRouteMatch();\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(cityActions.fetchCityList());\n  }, [dispatch]);\n\n  return (\n    <Switch>\n      <Route path={routeMatch.path} exact>\n        <ListPage />\n      </Route>\n\n      <Route path={`${routeMatch.path}/add`}>\n        <AddEditPage />\n      </Route>\n\n      <Route path={`${routeMatch.path}/:studentId`}>\n        <AddEditPage />\n      </Route>\n    </Switch>\n  );\n}\n","import { Box, makeStyles } from '@material-ui/core';\nimport { Header, Sidebar } from 'components/Common';\nimport Dashboard from 'features/dashboard';\nimport StudentFeature from 'features/student';\nimport * as React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'grid',\n    gridTemplateRows: 'auto 1fr',\n    gridTemplateColumns: '240px 1fr',\n    gridTemplateAreas: '\"header header\" \"sidebar main\"',\n    minHeight: '100vh',\n  },\n  header: {\n    gridArea: 'header',\n  },\n  sidebar: {\n    gridArea: 'sidebar',\n    borderRight: `1px solid ${theme.palette.divider}`,\n    backgroundColor: theme.palette.background.paper,\n  },\n  main: {\n    gridArea: 'main',\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 3),\n  },\n}));\n\nexport function AdminLayout() {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <Box className={classes.header}>\n        <Header />\n      </Box>\n      <Box className={classes.sidebar}>\n        <Sidebar />\n      </Box>\n      <Box className={classes.main}>\n        <Switch>\n          <Route path=\"/admin/dashboard\">\n            <Dashboard />\n          </Route>\n\n          <Route path=\"/admin/students\">\n            <StudentFeature />\n          </Route>\n        </Switch>\n      </Box>\n    </Box>\n  );\n}\n","import React, { useEffect } from 'react';\nimport cityApi from 'api/cityApi';\nimport { Route, Switch } from 'react-router-dom';\nimport LoginPage from 'features/auth/pages/LoginPage';\nimport { AdminLayout } from 'components/Layout';\nimport { NotFound, PrivateRoute } from 'components/Common';\n\nfunction App() {\n  useEffect(() => {\n    cityApi.getAll().then((response) => console.log(response));\n  });\n\n  return (\n    <Switch>\n      <Route path=\"/\" exact>\n        <LoginPage />\n      </Route>\n\n      <PrivateRoute path=\"/admin\">\n        <AdminLayout />\n      </PrivateRoute>\n\n      <Route>\n        <NotFound />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise<{ data: number }>((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport { fetchCount } from './counterAPI';\n\nexport interface CounterState {\n  value: number;\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: CounterState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount: number) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount: number): AppThunk => (\n  dispatch,\n  getState\n) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { fork, take, call, delay, put } from '@redux-saga/core/effects';\nimport { PayloadAction } from '@reduxjs/toolkit';\nimport { push } from 'connected-react-router';\nimport { authActions, LoginPayload } from './authSlice';\n\nfunction* handleLogin(payload: LoginPayload) {\n  try {\n    yield delay(1000);\n    localStorage.setItem('access_token', 'fake_token');\n    yield put(\n      authActions.loginSuccess({\n        id: 1,\n        name: 'Easy Frontend',\n      })\n    );\n    debugger;\n    // TODO: Redirect to admin page\n    yield put(push('/admin/dashboard'));\n  } catch (error: any) {\n    yield put(authActions.loginFailed(error.message));\n  }\n}\n\nfunction* handleLogout() {\n  yield delay(500);\n  localStorage.removeItem('access_token');\n  // TODO: Redirect to login page\n  yield put(push('/'));\n}\n\nfunction* watchLoginFlow() {\n  while (true) {\n    const isLoggedIn = Boolean(localStorage.getItem('access_token'));\n    if (!isLoggedIn) {\n      const action: PayloadAction<LoginPayload> = yield take(authActions.login.type);\n      yield fork(handleLogin, action.payload);\n    }\n\n    yield take(authActions.logout.type);\n    yield call(handleLogout);\n  }\n}\n\nexport default function* authSaga() {\n  yield fork(watchLoginFlow);\n}\n","import { all, call, put, takeLatest } from '@redux-saga/core/effects';\nimport cityApi from 'api/cityApi';\nimport studentApi from 'api/studentApi';\nimport { City, ListResponse, Student } from 'models';\nimport { dashboardActions, RankingByCity } from './dashboardSlice';\n\nfunction* fetchStatistics() {\n  const responseList: Array<ListResponse<Student>> = yield all([\n    call(studentApi.getAll, { _page: 1, _limit: 1, gender: 'male' }),\n    call(studentApi.getAll, { _page: 1, _limit: 1, gender: 'female' }),\n    call(studentApi.getAll, { _page: 1, _limit: 1, mark_gte: 8 }),\n    call(studentApi.getAll, { _page: 1, _limit: 1, mark_lte: 5 }),\n  ]);\n\n  const statistics = responseList.map((x) => x.pagination._totalRows);\n  const [maleCount, femaleCount, highMarkCount, lowMarkCount] = statistics;\n  yield put(\n    dashboardActions.setStatistics({\n      femaleCount,\n      highMarkCount,\n      lowMarkCount,\n      maleCount,\n    })\n  );\n}\n\nfunction* fetchHighestStudentList() {\n  const { data }: ListResponse<Student> = yield call(studentApi.getAll, {\n    _page: 1,\n    _limit: 5,\n    _order: 'desc',\n    _sort: 'mark',\n  });\n\n  yield put(dashboardActions.setHighestStudentList(data));\n}\n\nfunction* fetchLowestStudentList() {\n  const { data }: ListResponse<Student> = yield call(studentApi.getAll, {\n    _page: 1,\n    _limit: 5,\n    _order: 'asc',\n    _sort: 'mark',\n  });\n\n  yield put(dashboardActions.setLowestStudentList(data));\n}\n\nfunction* fetchRankingByCityList() {\n  // Fetch city list\n  const { data: cityList }: ListResponse<City> = yield call(cityApi.getAll);\n\n  // Fetch ranking by city\n  const callList = cityList.map((x) =>\n    call(studentApi.getAll, {\n      _page: 1,\n      _limit: 5,\n      _order: 'desc',\n      _sort: 'mark',\n      city: x.code,\n    })\n  );\n\n  const responseList: Array<ListResponse<Student>> = yield all(callList);\n\n  const rankingByCityList: Array<RankingByCity> = responseList.map((x, index) => ({\n    cityId: cityList[index].code,\n    cityName: cityList[index].name,\n    rankingList: x.data,\n  }));\n\n  // Update state\n  yield put(dashboardActions.setRankingByCityList(rankingByCityList));\n}\n\nfunction* fetchDashboardData() {\n  try {\n    yield all([\n      call(fetchStatistics),\n      call(fetchHighestStudentList),\n      call(fetchLowestStudentList),\n      call(fetchRankingByCityList),\n    ]);\n\n    yield put(dashboardActions.fetchDataSuccess());\n  } catch (error) {\n    yield put(dashboardActions.fetchDataError());\n    console.log('Failed to fetch dashboard data', error);\n  }\n}\n\nexport default function* dashboardSaga() {\n  yield takeLatest(dashboardActions.fetchData.type, fetchDashboardData);\n}\n","import { call, debounce, put, takeLatest } from '@redux-saga/core/effects';\nimport { PayloadAction } from '@reduxjs/toolkit';\nimport studentApi from 'api/studentApi';\nimport { ListParams, ListResponse, Student } from 'models';\nimport { studentActions } from './studentSlice';\n\nfunction* fetchStudentList(action: PayloadAction<ListParams>) {\n  try {\n    const response: ListResponse<Student> = yield call(studentApi.getAll, action.payload);\n    yield put(studentActions.fetchStudentListSuccess(response));\n  } catch (error) {\n    console.log('Failed to fetch student list', error);\n    yield put(studentActions.fetchStudentListFailed());\n  }\n}\n\nfunction* setFilterWithDebounce(action: PayloadAction<ListParams>) {\n  yield put(studentActions.setFilter(action.payload));\n}\n\nexport default function* studentSaga() {\n  // watch fetch student action\n  yield takeLatest(studentActions.fetchStudentList.type, fetchStudentList);\n\n  yield debounce(500, studentActions.setFilterWithDebounce.type, setFilterWithDebounce);\n}\n","import { call, put, takeLatest } from '@redux-saga/core/effects';\nimport cityApi from 'api/cityApi';\nimport { City, ListResponse } from 'models';\nimport { cityActions } from './citySilce';\n\nfunction* fetchCityList() {\n  try {\n    const city: ListResponse<City> = yield call(cityApi.getAll);\n    yield put(cityActions.fetchCityListSuccess(city));\n  } catch (error) {\n    yield put(cityActions.fetchCityListFailed());\n  }\n}\n\nexport default function* citySaga() {\n  yield takeLatest(cityActions.fetchCityList.type, fetchCityList);\n}\n","import { all } from 'redux-saga/effects';\nimport authSaga from 'features/auth/authSaga';\nimport dashboardSaga from 'features/dashboard/dashboardSaga';\nimport studentSaga from 'features/student/studentSaga';\nimport citySaga from 'features/city/citySaga';\n\nexport default function* rootSaga() {\n  yield all([authSaga(), dashboardSaga(), studentSaga(), citySaga()]);\n}\n","import createSagaMiddleware from '@redux-saga/core';\nimport { Action, combineReducers, configureStore, ThunkAction } from '@reduxjs/toolkit';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport authReducer from 'features/auth/authSlice';\nimport cityReducer from 'features/city/citySilce';\nimport dashboardReducer from 'features/dashboard/dashboardSlice';\nimport studentReducer from 'features/student/studentSlice';\nimport { history } from 'utils';\nimport counterReducer from '../features/counter/counterSlice';\nimport rootSaga from './rootSaga';\n\nconst rootReducer = combineReducers({\n  router: connectRouter(history),\n  counter: counterReducer,\n  auth: authReducer,\n  dashboard: dashboardReducer,\n  student: studentReducer,\n  city: cityReducer,\n});\n\nconst sagaMiddleware = createSagaMiddleware();\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(sagaMiddleware, routerMiddleware(history)),\n});\n\nsagaMiddleware.run(rootSaga);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { CssBaseline } from '@material-ui/core';\nimport { ConnectedRouter } from 'connected-react-router';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { history } from 'utils';\nimport App from './App';\nimport { store } from './app/store';\nimport './index.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport { ToastContainer } from 'react-toastify';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <CssBaseline />\n        <App />\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n      </ConnectedRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}